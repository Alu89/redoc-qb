<root>




<fdecl type="void" id="_openssl_ebcdic2ascii" text="void *_openssl_ebcdic2ascii(void *dest, const void *srce, size_t count)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/ebcdic.h">
  <args>
    <arg type="void" id="dest" text="void *dest" mod=""/>
    <arg type="const void" id="srce" text="const void *srce" mod=""/>
    <arg type="size_t" id="count" text="size_t count" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="_openssl_ascii2ebcdic" text="void *_openssl_ascii2ebcdic(void *dest, const void *srce, size_t count)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/ebcdic.h">
  <args>
    <arg type="void" id="dest" text="void *dest" mod=""/>
    <arg type="const void" id="srce" text="const void *srce" mod=""/>
    <arg type="size_t" id="count" text="size_t count" mod=""/>
  </args>
</fdecl>

<fdecl type="int" id="CRYPTO_EX_new" text="typedef int CRYPTO_EX_new (void *parent, void *ptr, CRYPTO_EX_DATA *ad,&#10;                           int idx, long argl, void *argp)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/ossl_typ.h">
  <args>
    <arg type="void" id="parent" text="void *parent" mod=""/>
    <arg type="void" id="ptr" text="void *ptr" mod=""/>
    <arg type="CRYPTO_EX_DATA" id="ad" text="CRYPTO_EX_DATA *ad" mod=""/>
    <arg type="int" id="idx" text="int idx" mod=""/>
    <arg type="long" id="argl" text="long argl" mod=""/>
    <arg type="void" id="argp" text="void *argp" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_EX_free" text="typedef void CRYPTO_EX_free (void *parent, void *ptr, CRYPTO_EX_DATA *ad,&#10;                             int idx, long argl, void *argp)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/ossl_typ.h">
  <args>
    <arg type="void" id="parent" text="void *parent" mod=""/>
    <arg type="void" id="ptr" text="void *ptr" mod=""/>
    <arg type="CRYPTO_EX_DATA" id="ad" text="CRYPTO_EX_DATA *ad" mod=""/>
    <arg type="int" id="idx" text="int idx" mod=""/>
    <arg type="long" id="argl" text="long argl" mod=""/>
    <arg type="void" id="argp" text="void *argp" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_EX_dup" text="typedef int CRYPTO_EX_dup (CRYPTO_EX_DATA *to, CRYPTO_EX_DATA *from,&#10;                           void *from_d, int idx, long argl, void *argp)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/ossl_typ.h">
  <args>
    <arg type="CRYPTO_EX_DATA" id="to" text="CRYPTO_EX_DATA *to" mod=""/>
    <arg type="CRYPTO_EX_DATA" id="from" text="CRYPTO_EX_DATA *from" mod=""/>
    <arg type="void" id="from_d" text="void *from_d" mod=""/>
    <arg type="int" id="idx" text="int idx" mod=""/>
    <arg type="long" id="argl" text="long argl" mod=""/>
    <arg type="void" id="argp" text="void *argp" mod=""/>
  </args>
</fdecl>


<fdecl type="int" id="MD4_Init" text="int MD4_Init(MD4_CTX *c)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/md4.h">
  <args>
    <arg type="MD4_CTX" id="c" text="MD4_CTX *c" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="MD4_Update" text="int MD4_Update(MD4_CTX *c, const void *data, size_t len)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/md4.h">
  <args>
    <arg type="MD4_CTX" id="c" text="MD4_CTX *c" mod=""/>
    <arg type="const void" id="data" text="const void *data" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="MD4_Final" text="int MD4_Final(unsigned char *md, MD4_CTX *c)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/md4.h">
  <args>
    <arg type="unsigned char" id="md" text="unsigned char *md" mod=""/>
    <arg type="MD4_CTX" id="c" text="MD4_CTX *c" mod=""/>
  </args>
</fdecl>
<fdecl type="unsigned char" id="MD4" text="unsigned char *MD4(const unsigned char *d, size_t n, unsigned char *md)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/md4.h">
  <args>
    <arg type="const unsigned char" id="d" text="const unsigned char *d" mod=""/>
    <arg type="size_t" id="n" text="size_t n" mod=""/>
    <arg type="unsigned char" id="md" text="unsigned char *md" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="MD4_Transform" text="void MD4_Transform(MD4_CTX *c, const unsigned char *b)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/md4.h">
  <args>
    <arg type="MD4_CTX" id="c" text="MD4_CTX *c" mod=""/>
    <arg type="const unsigned char" id="b" text="const unsigned char *b" mod=""/>
  </args>
</fdecl>

<fdecl type="int" id="MD5_Init" text="int MD5_Init(MD5_CTX *c)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/md5.h">
  <args>
    <arg type="MD5_CTX" id="c" text="MD5_CTX *c" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="MD5_Update" text="int MD5_Update(MD5_CTX *c, const void *data, size_t len)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/md5.h">
  <args>
    <arg type="MD5_CTX" id="c" text="MD5_CTX *c" mod=""/>
    <arg type="const void" id="data" text="const void *data" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="MD5_Final" text="int MD5_Final(unsigned char *md, MD5_CTX *c)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/md5.h">
  <args>
    <arg type="unsigned char" id="md" text="unsigned char *md" mod=""/>
    <arg type="MD5_CTX" id="c" text="MD5_CTX *c" mod=""/>
  </args>
</fdecl>
<fdecl type="unsigned char" id="MD5" text="unsigned char *MD5(const unsigned char *d, size_t n, unsigned char *md)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/md5.h">
  <args>
    <arg type="const unsigned char" id="d" text="const unsigned char *d" mod=""/>
    <arg type="size_t" id="n" text="size_t n" mod=""/>
    <arg type="unsigned char" id="md" text="unsigned char *md" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="MD5_Transform" text="void MD5_Transform(MD5_CTX *c, const unsigned char *b)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/md5.h">
  <args>
    <arg type="MD5_CTX" id="c" text="MD5_CTX *c" mod=""/>
    <arg type="const unsigned char" id="b" text="const unsigned char *b" mod=""/>
  </args>
</fdecl>

<fdecl type="int" id="CRYPTO_mem_ctrl" text="int CRYPTO_mem_ctrl(int mode)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="int" id="mode" text="int mode" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_is_mem_check_on" text="int CRYPTO_is_mem_check_on(void)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="ANON0" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="const char" id="SSLeay_version" text="const char *SSLeay_version(int type)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="int" id="type" text="int type" mod=""/>
  </args>
</fdecl>
<fdecl type="unsigned long" id="SSLeay" text="unsigned long SSLeay(void)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="ANON1" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="OPENSSL_issetugid" text="int OPENSSL_issetugid(void)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="ANON2" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="const CRYPTO_EX_DATA_IMPL" id="CRYPTO_get_ex_data_implementation" text="const CRYPTO_EX_DATA_IMPL *CRYPTO_get_ex_data_implementation(void)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="ANON3" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_set_ex_data_implementation" text="int CRYPTO_set_ex_data_implementation(const CRYPTO_EX_DATA_IMPL *i)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="const CRYPTO_EX_DATA_IMPL" id="i" text="const CRYPTO_EX_DATA_IMPL *i" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_ex_data_new_class" text="int CRYPTO_ex_data_new_class(void)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="ANON4" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_get_ex_new_index" text="int CRYPTO_get_ex_new_index(int class_index, long argl, void *argp,&#10;                            CRYPTO_EX_new *new_func, CRYPTO_EX_dup *dup_func,&#10;                            CRYPTO_EX_free *free_func)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="int" id="class_index" text="int class_index" mod=""/>
    <arg type="long" id="argl" text="long argl" mod=""/>
    <arg type="void" id="argp" text="void *argp" mod=""/>
    <arg type="CRYPTO_EX_new" id="new_func" text="CRYPTO_EX_new *new_func" mod=""/>
    <arg type="CRYPTO_EX_dup" id="dup_func" text="CRYPTO_EX_dup *dup_func" mod=""/>
    <arg type="CRYPTO_EX_free" id="free_func" text="CRYPTO_EX_free *free_func" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_new_ex_data" text="int CRYPTO_new_ex_data(int class_index, void *obj, CRYPTO_EX_DATA *ad)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="int" id="class_index" text="int class_index" mod=""/>
    <arg type="void" id="obj" text="void *obj" mod=""/>
    <arg type="CRYPTO_EX_DATA" id="ad" text="CRYPTO_EX_DATA *ad" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_dup_ex_data" text="int CRYPTO_dup_ex_data(int class_index, CRYPTO_EX_DATA *to,&#10;                       CRYPTO_EX_DATA *from)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="int" id="class_index" text="int class_index" mod=""/>
    <arg type="CRYPTO_EX_DATA" id="to" text="CRYPTO_EX_DATA *to" mod=""/>
    <arg type="CRYPTO_EX_DATA" id="from" text="CRYPTO_EX_DATA *from" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_free_ex_data" text="void CRYPTO_free_ex_data(int class_index, void *obj, CRYPTO_EX_DATA *ad)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="int" id="class_index" text="int class_index" mod=""/>
    <arg type="void" id="obj" text="void *obj" mod=""/>
    <arg type="CRYPTO_EX_DATA" id="ad" text="CRYPTO_EX_DATA *ad" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_set_ex_data" text="int CRYPTO_set_ex_data(CRYPTO_EX_DATA *ad, int idx, void *val)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="CRYPTO_EX_DATA" id="ad" text="CRYPTO_EX_DATA *ad" mod=""/>
    <arg type="int" id="idx" text="int idx" mod=""/>
    <arg type="void" id="val" text="void *val" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_get_ex_data" text="void *CRYPTO_get_ex_data(const CRYPTO_EX_DATA *ad, int idx)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="const CRYPTO_EX_DATA" id="ad" text="const CRYPTO_EX_DATA *ad" mod=""/>
    <arg type="int" id="idx" text="int idx" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_cleanup_all_ex_data" text="void CRYPTO_cleanup_all_ex_data(void)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="ANON5" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_get_new_lockid" text="int CRYPTO_get_new_lockid(char *name)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="char" id="name" text="char *name" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_num_locks" text="int CRYPTO_num_locks(void)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="ANON6" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_lock" text="void CRYPTO_lock(int mode, int type, const char *file, int line)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="int" id="mode" text="int mode" mod=""/>
    <arg type="int" id="type" text="int type" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_set_locking_callback" text="void CRYPTO_set_locking_callback(void (*func) (int mode, int type,&#10;                                               const char *file, int line))" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="func" text="void (*func) (int mode, int type,&#10;                                               const char *file, int line)" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_get_locking_callback" text="void (*CRYPTO_get_locking_callback(void)) (int mode, int type,&#10;                                           const char *file, int line)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="ANON7" text="void" mod=""/>
    <arg type="int" id="mode" text="int mode" mod=""/>
    <arg type="int" id="type" text="int type" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_set_add_lock_callback" text="void CRYPTO_set_add_lock_callback(int (*func)&#10;                                   (int *num, int mount, int type,&#10;                                    const char *file, int line))" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="int" id="func" text="int (*func)&#10;                                   (int *num, int mount, int type,&#10;                                    const char *file, int line)" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_get_add_lock_callback" text="int (*CRYPTO_get_add_lock_callback(void)) (int *num, int mount, int type,&#10;                                           const char *file, int line)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="ANON8" text="void" mod=""/>
    <arg type="int" id="num" text="int *num" mod=""/>
    <arg type="int" id="mount" text="int mount" mod=""/>
    <arg type="int" id="type" text="int type" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_THREADID_set_numeric" text="void CRYPTO_THREADID_set_numeric(CRYPTO_THREADID *id, unsigned long val)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="CRYPTO_THREADID" id="id" text="CRYPTO_THREADID *id" mod=""/>
    <arg type="unsigned long" id="val" text="unsigned long val" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_THREADID_set_pointer" text="void CRYPTO_THREADID_set_pointer(CRYPTO_THREADID *id, void *ptr)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="CRYPTO_THREADID" id="id" text="CRYPTO_THREADID *id" mod=""/>
    <arg type="void" id="ptr" text="void *ptr" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_THREADID_set_callback" text="int CRYPTO_THREADID_set_callback(void (*threadid_func) (CRYPTO_THREADID *))" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="threadid_func" text="void (*threadid_func) (CRYPTO_THREADID *)" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_THREADID_get_callback" text="void (*CRYPTO_THREADID_get_callback(void)) (CRYPTO_THREADID *)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="ANON9" text="void" mod=""/>
    <arg type="CRYPTO_THREADID" id="ANON10" text="CRYPTO_THREADID *" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_THREADID_current" text="void CRYPTO_THREADID_current(CRYPTO_THREADID *id)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="CRYPTO_THREADID" id="id" text="CRYPTO_THREADID *id" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_THREADID_cmp" text="int CRYPTO_THREADID_cmp(const CRYPTO_THREADID *a, const CRYPTO_THREADID *b)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="const CRYPTO_THREADID" id="a" text="const CRYPTO_THREADID *a" mod=""/>
    <arg type="const CRYPTO_THREADID" id="b" text="const CRYPTO_THREADID *b" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_THREADID_cpy" text="void CRYPTO_THREADID_cpy(CRYPTO_THREADID *dest, const CRYPTO_THREADID *src)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="CRYPTO_THREADID" id="dest" text="CRYPTO_THREADID *dest" mod=""/>
    <arg type="const CRYPTO_THREADID" id="src" text="const CRYPTO_THREADID *src" mod=""/>
  </args>
</fdecl>
<fdecl type="unsigned long" id="CRYPTO_THREADID_hash" text="unsigned long CRYPTO_THREADID_hash(const CRYPTO_THREADID *id)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="const CRYPTO_THREADID" id="id" text="const CRYPTO_THREADID *id" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_set_id_callback" text="void CRYPTO_set_id_callback(unsigned long (*func) (void))" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="unsigned long" id="func" text="unsigned long (*func) (void)" mod=""/>
  </args>
</fdecl>
<fdecl type="unsigned long" id="CRYPTO_get_id_callback" text="unsigned long (*CRYPTO_get_id_callback(void)) (void)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="ANON11" text="void" mod=""/>
    <arg type="void" id="ANON12" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="unsigned long" id="CRYPTO_thread_id" text="unsigned long CRYPTO_thread_id(void)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="ANON13" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="const char" id="CRYPTO_get_lock_name" text="const char *CRYPTO_get_lock_name(int type)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="int" id="type" text="int type" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_add_lock" text="int CRYPTO_add_lock(int *pointer, int amount, int type, const char *file,&#10;                    int line)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="int" id="pointer" text="int *pointer" mod=""/>
    <arg type="int" id="amount" text="int amount" mod=""/>
    <arg type="int" id="type" text="int type" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_get_new_dynlockid" text="int CRYPTO_get_new_dynlockid(void)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="ANON14" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_destroy_dynlockid" text="void CRYPTO_destroy_dynlockid(int i)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="int" id="i" text="int i" mod=""/>
  </args>
</fdecl>
<fdecl type="struct CRYPTO_dynlock_value" id="CRYPTO_get_dynlock_value" text="struct CRYPTO_dynlock_value *CRYPTO_get_dynlock_value(int i)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="int" id="i" text="int i" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_set_dynlock_create_callback" text="void CRYPTO_set_dynlock_create_callback(struct CRYPTO_dynlock_value&#10;                                        *(*dyn_create_function) (const char&#10;                                                                 *file,&#10;                                                                 int line))" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="struct CRYPTO_dynlock_value" id="dyn_create_function" text="struct CRYPTO_dynlock_value&#10;                                        *(*dyn_create_function) (const char&#10;                                                                 *file,&#10;                                                                 int line)" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_set_dynlock_lock_callback" text="void CRYPTO_set_dynlock_lock_callback(void (*dyn_lock_function)&#10;                                       (int mode,&#10;                                        struct CRYPTO_dynlock_value *l,&#10;                                        const char *file, int line))" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="dyn_lock_function" text="void (*dyn_lock_function)&#10;                                       (int mode,&#10;                                        struct CRYPTO_dynlock_value *l,&#10;                                        const char *file, int line)" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_set_dynlock_destroy_callback" text="void CRYPTO_set_dynlock_destroy_callback(void (*dyn_destroy_function)&#10;                                          (struct CRYPTO_dynlock_value *l,&#10;                                           const char *file, int line))" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="dyn_destroy_function" text="void (*dyn_destroy_function)&#10;                                          (struct CRYPTO_dynlock_value *l,&#10;                                           const char *file, int line)" mod=""/>
  </args>
</fdecl>
<fdecl type="struct CRYPTO_dynlock_value" id="CRYPTO_get_dynlock_create_callback" text="struct CRYPTO_dynlock_value&#10;*(*CRYPTO_get_dynlock_create_callback(void)) (const char *file, int line)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="ANON15" text="void" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_get_dynlock_lock_callback" text="void (*CRYPTO_get_dynlock_lock_callback(void)) (int mode,&#10;                                                struct CRYPTO_dynlock_value&#10;                                                *l, const char *file,&#10;                                                int line)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="ANON16" text="void" mod=""/>
    <arg type="int" id="mode" text="int mode" mod=""/>
    <arg type="struct CRYPTO_dynlock_value" id="l" text="struct CRYPTO_dynlock_value&#10;                                                *l" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_get_dynlock_destroy_callback" text="void (*CRYPTO_get_dynlock_destroy_callback(void)) (struct CRYPTO_dynlock_value&#10;                                                   *l, const char *file,&#10;                                                   int line)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="ANON17" text="void" mod=""/>
    <arg type="struct CRYPTO_dynlock_value" id="l" text="struct CRYPTO_dynlock_value&#10;                                                   *l" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_set_mem_functions" text="int CRYPTO_set_mem_functions(void *(*m) (size_t), void *(*r) (void *, size_t),&#10;                             void (*f) (void *))" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="m" text="void *(*m) (size_t)" mod=""/>
    <arg type="void" id="r" text="void *(*r) (void *, size_t)" mod=""/>
    <arg type="void" id="f" text="void (*f) (void *)" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_set_locked_mem_functions" text="int CRYPTO_set_locked_mem_functions(void *(*m) (size_t),&#10;                                    void (*free_func) (void *))" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="m" text="void *(*m) (size_t)" mod=""/>
    <arg type="void" id="free_func" text="void (*free_func) (void *)" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_set_mem_ex_functions" text="int CRYPTO_set_mem_ex_functions(void *(*m) (size_t, const char *, int),&#10;                                void *(*r) (void *, size_t, const char *,&#10;                                            int), void (*f) (void *))" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="m" text="void *(*m) (size_t, const char *, int)" mod=""/>
    <arg type="void" id="r" text="void *(*r) (void *, size_t, const char *,&#10;                                            int)" mod=""/>
    <arg type="void" id="f" text="void (*f) (void *)" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_set_locked_mem_ex_functions" text="int CRYPTO_set_locked_mem_ex_functions(void *(*m) (size_t, const char *, int),&#10;                                       void (*free_func) (void *))" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="m" text="void *(*m) (size_t, const char *, int)" mod=""/>
    <arg type="void" id="free_func" text="void (*free_func) (void *)" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_set_mem_debug_functions" text="int CRYPTO_set_mem_debug_functions(void (*m)&#10;                                    (void *, int, const char *, int, int),&#10;                                   void (*r) (void *, void *, int,&#10;                                              const char *, int, int),&#10;                                   void (*f) (void *, int), void (*so) (long),&#10;                                   long (*go) (void))" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="m" text="void (*m)&#10;                                    (void *, int, const char *, int, int)" mod=""/>
    <arg type="void" id="r" text="void (*r) (void *, void *, int,&#10;                                              const char *, int, int)" mod=""/>
    <arg type="void" id="f" text="void (*f) (void *, int)" mod=""/>
    <arg type="void" id="so" text="void (*so) (long)" mod=""/>
    <arg type="long" id="go" text="long (*go) (void)" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_get_mem_functions" text="void CRYPTO_get_mem_functions(void *(**m) (size_t),&#10;                              void *(**r) (void *, size_t),&#10;                              void (**f) (void *))" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="m" text="void *(**m) (size_t)" mod=""/>
    <arg type="void" id="r" text="void *(**r) (void *, size_t)" mod=""/>
    <arg type="void" id="f" text="void (**f) (void *)" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_get_locked_mem_functions" text="void CRYPTO_get_locked_mem_functions(void *(**m) (size_t),&#10;                                     void (**f) (void *))" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="m" text="void *(**m) (size_t)" mod=""/>
    <arg type="void" id="f" text="void (**f) (void *)" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_get_mem_ex_functions" text="void CRYPTO_get_mem_ex_functions(void *(**m) (size_t, const char *, int),&#10;                                 void *(**r) (void *, size_t, const char *,&#10;                                              int), void (**f) (void *))" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="m" text="void *(**m) (size_t, const char *, int)" mod=""/>
    <arg type="void" id="r" text="void *(**r) (void *, size_t, const char *,&#10;                                              int)" mod=""/>
    <arg type="void" id="f" text="void (**f) (void *)" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_get_locked_mem_ex_functions" text="void CRYPTO_get_locked_mem_ex_functions(void&#10;                                        *(**m) (size_t, const char *, int),&#10;                                        void (**f) (void *))" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="m" text="void&#10;                                        *(**m) (size_t, const char *, int)" mod=""/>
    <arg type="void" id="f" text="void (**f) (void *)" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_get_mem_debug_functions" text="void CRYPTO_get_mem_debug_functions(void (**m)&#10;                                     (void *, int, const char *, int, int),&#10;                                    void (**r) (void *, void *, int,&#10;                                                const char *, int, int),&#10;                                    void (**f) (void *, int),&#10;                                    void (**so) (long), long (**go) (void))" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="m" text="void (**m)&#10;                                     (void *, int, const char *, int, int)" mod=""/>
    <arg type="void" id="r" text="void (**r) (void *, void *, int,&#10;                                                const char *, int, int)" mod=""/>
    <arg type="void" id="f" text="void (**f) (void *, int)" mod=""/>
    <arg type="void" id="so" text="void (**so) (long)" mod=""/>
    <arg type="long" id="go" text="long (**go) (void)" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_malloc_locked" text="void *CRYPTO_malloc_locked(int num, const char *file, int line)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="int" id="num" text="int num" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_free_locked" text="void CRYPTO_free_locked(void *ptr)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="ptr" text="void *ptr" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_malloc" text="void *CRYPTO_malloc(int num, const char *file, int line)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="int" id="num" text="int num" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
  </args>
</fdecl>
<fdecl type="char" id="CRYPTO_strdup" text="char *CRYPTO_strdup(const char *str, const char *file, int line)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="const char" id="str" text="const char *str" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_free" text="void CRYPTO_free(void *ptr)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="ptr" text="void *ptr" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_realloc" text="void *CRYPTO_realloc(void *addr, int num, const char *file, int line)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="addr" text="void *addr" mod=""/>
    <arg type="int" id="num" text="int num" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_realloc_clean" text="void *CRYPTO_realloc_clean(void *addr, int old_num, int num, const char *file,&#10;                           int line)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="addr" text="void *addr" mod=""/>
    <arg type="int" id="old_num" text="int old_num" mod=""/>
    <arg type="int" id="num" text="int num" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_remalloc" text="void *CRYPTO_remalloc(void *addr, int num, const char *file, int line)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="addr" text="void *addr" mod=""/>
    <arg type="int" id="num" text="int num" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="OPENSSL_cleanse" text="void OPENSSL_cleanse(void *ptr, size_t len)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="ptr" text="void *ptr" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_set_mem_debug_options" text="void CRYPTO_set_mem_debug_options(long bits)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="long" id="bits" text="long bits" mod=""/>
  </args>
</fdecl>
<fdecl type="long" id="CRYPTO_get_mem_debug_options" text="long CRYPTO_get_mem_debug_options(void)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="ANON18" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_push_info_" text="int CRYPTO_push_info_(const char *info, const char *file, int line)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="const char" id="info" text="const char *info" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_pop_info" text="int CRYPTO_pop_info(void)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="ANON19" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_remove_all_info" text="int CRYPTO_remove_all_info(void)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="ANON20" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_dbg_malloc" text="void CRYPTO_dbg_malloc(void *addr, int num, const char *file, int line,&#10;                       int before_p)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="addr" text="void *addr" mod=""/>
    <arg type="int" id="num" text="int num" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
    <arg type="int" id="before_p" text="int before_p" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_dbg_realloc" text="void CRYPTO_dbg_realloc(void *addr1, void *addr2, int num, const char *file,&#10;                        int line, int before_p)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="addr1" text="void *addr1" mod=""/>
    <arg type="void" id="addr2" text="void *addr2" mod=""/>
    <arg type="int" id="num" text="int num" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
    <arg type="int" id="before_p" text="int before_p" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_dbg_free" text="void CRYPTO_dbg_free(void *addr, int before_p)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="addr" text="void *addr" mod=""/>
    <arg type="int" id="before_p" text="int before_p" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_dbg_set_options" text="void CRYPTO_dbg_set_options(long bits)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="long" id="bits" text="long bits" mod=""/>
  </args>
</fdecl>
<fdecl type="long" id="CRYPTO_dbg_get_options" text="long CRYPTO_dbg_get_options(void)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="ANON21" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_mem_leaks_fp" text="void CRYPTO_mem_leaks_fp(FILE *)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="FILE" id="ANON22" text="FILE *" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_mem_leaks" text="void CRYPTO_mem_leaks(struct bio_st *bio)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="struct bio_st" id="bio" text="struct bio_st *bio" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_MEM_LEAK_CB" text="typedef void *CRYPTO_MEM_LEAK_CB (unsigned long, const char *, int, int,&#10;                                  void *)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="unsigned long" id="ANON23" text="unsigned long" mod=""/>
    <arg type="const char" id="ANON24" text="const char *" mod=""/>
    <arg type="int" id="ANON25" text="int" mod=""/>
    <arg type="int" id="ANON26" text="int" mod=""/>
    <arg type="void" id="ANON27" text="void *" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_mem_leaks_cb" text="void CRYPTO_mem_leaks_cb(CRYPTO_MEM_LEAK_CB *cb)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="CRYPTO_MEM_LEAK_CB" id="cb" text="CRYPTO_MEM_LEAK_CB *cb" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="OpenSSLDie" text="void OpenSSLDie(const char *file, int line, const char *assertion)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
    <arg type="const char" id="assertion" text="const char *assertion" mod=""/>
  </args>
</fdecl>
<fdecl type="unsigned long" id="OPENSSL_ia32cap_loc" text="unsigned long *OPENSSL_ia32cap_loc(void)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="ANON28" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="OPENSSL_isservice" text="int OPENSSL_isservice(void)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="ANON29" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="FIPS_mode" text="int FIPS_mode(void)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="ANON30" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="FIPS_mode_set" text="int FIPS_mode_set(int r)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="int" id="r" text="int r" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="OPENSSL_init" text="void OPENSSL_init(void)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="ANON31" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_memcmp" text="int CRYPTO_memcmp(const volatile void *a, const volatile void *b, size_t len)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="const volatile void" id="a" text="const volatile void *a" mod=""/>
    <arg type="const volatile void" id="b" text="const volatile void *b" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="ERR_load_CRYPTO_strings" text="void ERR_load_CRYPTO_strings(void)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/crypto.h">
  <args>
    <arg type="void" id="ANON32" text="void" mod=""/>
  </args>
</fdecl>

<fdecl type="int" id="SHA_Init" text="int SHA_Init(SHA_CTX *c)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/sha.h">
  <args>
    <arg type="SHA_CTX" id="c" text="SHA_CTX *c" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="SHA_Update" text="int SHA_Update(SHA_CTX *c, const void *data, size_t len)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/sha.h">
  <args>
    <arg type="SHA_CTX" id="c" text="SHA_CTX *c" mod=""/>
    <arg type="const void" id="data" text="const void *data" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="SHA_Final" text="int SHA_Final(unsigned char *md, SHA_CTX *c)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/sha.h">
  <args>
    <arg type="unsigned char" id="md" text="unsigned char *md" mod=""/>
    <arg type="SHA_CTX" id="c" text="SHA_CTX *c" mod=""/>
  </args>
</fdecl>
<fdecl type="unsigned char" id="SHA" text="unsigned char *SHA(const unsigned char *d, size_t n, unsigned char *md)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/sha.h">
  <args>
    <arg type="const unsigned char" id="d" text="const unsigned char *d" mod=""/>
    <arg type="size_t" id="n" text="size_t n" mod=""/>
    <arg type="unsigned char" id="md" text="unsigned char *md" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="SHA_Transform" text="void SHA_Transform(SHA_CTX *c, const unsigned char *data)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/sha.h">
  <args>
    <arg type="SHA_CTX" id="c" text="SHA_CTX *c" mod=""/>
    <arg type="const unsigned char" id="data" text="const unsigned char *data" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="SHA1_Init" text="int SHA1_Init(SHA_CTX *c)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/sha.h">
  <args>
    <arg type="SHA_CTX" id="c" text="SHA_CTX *c" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="SHA1_Update" text="int SHA1_Update(SHA_CTX *c, const void *data, size_t len)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/sha.h">
  <args>
    <arg type="SHA_CTX" id="c" text="SHA_CTX *c" mod=""/>
    <arg type="const void" id="data" text="const void *data" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="SHA1_Final" text="int SHA1_Final(unsigned char *md, SHA_CTX *c)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/sha.h">
  <args>
    <arg type="unsigned char" id="md" text="unsigned char *md" mod=""/>
    <arg type="SHA_CTX" id="c" text="SHA_CTX *c" mod=""/>
  </args>
</fdecl>
<fdecl type="unsigned char" id="SHA1" text="unsigned char *SHA1(const unsigned char *d, size_t n, unsigned char *md)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/sha.h">
  <args>
    <arg type="const unsigned char" id="d" text="const unsigned char *d" mod=""/>
    <arg type="size_t" id="n" text="size_t n" mod=""/>
    <arg type="unsigned char" id="md" text="unsigned char *md" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="SHA1_Transform" text="void SHA1_Transform(SHA_CTX *c, const unsigned char *data)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/sha.h">
  <args>
    <arg type="SHA_CTX" id="c" text="SHA_CTX *c" mod=""/>
    <arg type="const unsigned char" id="data" text="const unsigned char *data" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="SHA224_Init" text="int SHA224_Init(SHA256_CTX *c)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/sha.h">
  <args>
    <arg type="SHA256_CTX" id="c" text="SHA256_CTX *c" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="SHA224_Update" text="int SHA224_Update(SHA256_CTX *c, const void *data, size_t len)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/sha.h">
  <args>
    <arg type="SHA256_CTX" id="c" text="SHA256_CTX *c" mod=""/>
    <arg type="const void" id="data" text="const void *data" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="SHA224_Final" text="int SHA224_Final(unsigned char *md, SHA256_CTX *c)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/sha.h">
  <args>
    <arg type="unsigned char" id="md" text="unsigned char *md" mod=""/>
    <arg type="SHA256_CTX" id="c" text="SHA256_CTX *c" mod=""/>
  </args>
</fdecl>
<fdecl type="unsigned char" id="SHA224" text="unsigned char *SHA224(const unsigned char *d, size_t n, unsigned char *md)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/sha.h">
  <args>
    <arg type="const unsigned char" id="d" text="const unsigned char *d" mod=""/>
    <arg type="size_t" id="n" text="size_t n" mod=""/>
    <arg type="unsigned char" id="md" text="unsigned char *md" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="SHA256_Init" text="int SHA256_Init(SHA256_CTX *c)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/sha.h">
  <args>
    <arg type="SHA256_CTX" id="c" text="SHA256_CTX *c" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="SHA256_Update" text="int SHA256_Update(SHA256_CTX *c, const void *data, size_t len)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/sha.h">
  <args>
    <arg type="SHA256_CTX" id="c" text="SHA256_CTX *c" mod=""/>
    <arg type="const void" id="data" text="const void *data" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="SHA256_Final" text="int SHA256_Final(unsigned char *md, SHA256_CTX *c)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/sha.h">
  <args>
    <arg type="unsigned char" id="md" text="unsigned char *md" mod=""/>
    <arg type="SHA256_CTX" id="c" text="SHA256_CTX *c" mod=""/>
  </args>
</fdecl>
<fdecl type="unsigned char" id="SHA256" text="unsigned char *SHA256(const unsigned char *d, size_t n, unsigned char *md)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/sha.h">
  <args>
    <arg type="const unsigned char" id="d" text="const unsigned char *d" mod=""/>
    <arg type="size_t" id="n" text="size_t n" mod=""/>
    <arg type="unsigned char" id="md" text="unsigned char *md" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="SHA256_Transform" text="void SHA256_Transform(SHA256_CTX *c, const unsigned char *data)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/sha.h">
  <args>
    <arg type="SHA256_CTX" id="c" text="SHA256_CTX *c" mod=""/>
    <arg type="const unsigned char" id="data" text="const unsigned char *data" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="SHA384_Init" text="int SHA384_Init(SHA512_CTX *c)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/sha.h">
  <args>
    <arg type="SHA512_CTX" id="c" text="SHA512_CTX *c" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="SHA384_Update" text="int SHA384_Update(SHA512_CTX *c, const void *data, size_t len)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/sha.h">
  <args>
    <arg type="SHA512_CTX" id="c" text="SHA512_CTX *c" mod=""/>
    <arg type="const void" id="data" text="const void *data" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="SHA384_Final" text="int SHA384_Final(unsigned char *md, SHA512_CTX *c)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/sha.h">
  <args>
    <arg type="unsigned char" id="md" text="unsigned char *md" mod=""/>
    <arg type="SHA512_CTX" id="c" text="SHA512_CTX *c" mod=""/>
  </args>
</fdecl>
<fdecl type="unsigned char" id="SHA384" text="unsigned char *SHA384(const unsigned char *d, size_t n, unsigned char *md)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/sha.h">
  <args>
    <arg type="const unsigned char" id="d" text="const unsigned char *d" mod=""/>
    <arg type="size_t" id="n" text="size_t n" mod=""/>
    <arg type="unsigned char" id="md" text="unsigned char *md" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="SHA512_Init" text="int SHA512_Init(SHA512_CTX *c)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/sha.h">
  <args>
    <arg type="SHA512_CTX" id="c" text="SHA512_CTX *c" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="SHA512_Update" text="int SHA512_Update(SHA512_CTX *c, const void *data, size_t len)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/sha.h">
  <args>
    <arg type="SHA512_CTX" id="c" text="SHA512_CTX *c" mod=""/>
    <arg type="const void" id="data" text="const void *data" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="SHA512_Final" text="int SHA512_Final(unsigned char *md, SHA512_CTX *c)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/sha.h">
  <args>
    <arg type="unsigned char" id="md" text="unsigned char *md" mod=""/>
    <arg type="SHA512_CTX" id="c" text="SHA512_CTX *c" mod=""/>
  </args>
</fdecl>
<fdecl type="unsigned char" id="SHA512" text="unsigned char *SHA512(const unsigned char *d, size_t n, unsigned char *md)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/sha.h">
  <args>
    <arg type="const unsigned char" id="d" text="const unsigned char *d" mod=""/>
    <arg type="size_t" id="n" text="size_t n" mod=""/>
    <arg type="unsigned char" id="md" text="unsigned char *md" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="SHA512_Transform" text="void SHA512_Transform(SHA512_CTX *c, const unsigned char *data)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/sha.h">
  <args>
    <arg type="SHA512_CTX" id="c" text="SHA512_CTX *c" mod=""/>
    <arg type="const unsigned char" id="data" text="const unsigned char *data" mod=""/>
  </args>
</fdecl>

<fdecl type="int" id="RIPEMD160_Init" text="int RIPEMD160_Init(RIPEMD160_CTX *c)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/ripemd.h">
  <args>
    <arg type="RIPEMD160_CTX" id="c" text="RIPEMD160_CTX *c" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="RIPEMD160_Update" text="int RIPEMD160_Update(RIPEMD160_CTX *c, const void *data, size_t len)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/ripemd.h">
  <args>
    <arg type="RIPEMD160_CTX" id="c" text="RIPEMD160_CTX *c" mod=""/>
    <arg type="const void" id="data" text="const void *data" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="RIPEMD160_Final" text="int RIPEMD160_Final(unsigned char *md, RIPEMD160_CTX *c)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/ripemd.h">
  <args>
    <arg type="unsigned char" id="md" text="unsigned char *md" mod=""/>
    <arg type="RIPEMD160_CTX" id="c" text="RIPEMD160_CTX *c" mod=""/>
  </args>
</fdecl>
<fdecl type="unsigned char" id="RIPEMD160" text="unsigned char *RIPEMD160(const unsigned char *d, size_t n, unsigned char *md)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/ripemd.h">
  <args>
    <arg type="const unsigned char" id="d" text="const unsigned char *d" mod=""/>
    <arg type="size_t" id="n" text="size_t n" mod=""/>
    <arg type="unsigned char" id="md" text="unsigned char *md" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="RIPEMD160_Transform" text="void RIPEMD160_Transform(RIPEMD160_CTX *c, const unsigned char *b)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/ripemd.h">
  <args>
    <arg type="RIPEMD160_CTX" id="c" text="RIPEMD160_CTX *c" mod=""/>
    <arg type="const unsigned char" id="b" text="const unsigned char *b" mod=""/>
  </args>
</fdecl>

<fdecl type="int" id="WHIRLPOOL_Init" text="int WHIRLPOOL_Init(WHIRLPOOL_CTX *c)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/whrlpool.h">
  <args>
    <arg type="WHIRLPOOL_CTX" id="c" text="WHIRLPOOL_CTX *c" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="WHIRLPOOL_Update" text="int WHIRLPOOL_Update(WHIRLPOOL_CTX *c, const void *inp, size_t bytes)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/whrlpool.h">
  <args>
    <arg type="WHIRLPOOL_CTX" id="c" text="WHIRLPOOL_CTX *c" mod=""/>
    <arg type="const void" id="inp" text="const void *inp" mod=""/>
    <arg type="size_t" id="bytes" text="size_t bytes" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="WHIRLPOOL_BitUpdate" text="void WHIRLPOOL_BitUpdate(WHIRLPOOL_CTX *c, const void *inp, size_t bits)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/whrlpool.h">
  <args>
    <arg type="WHIRLPOOL_CTX" id="c" text="WHIRLPOOL_CTX *c" mod=""/>
    <arg type="const void" id="inp" text="const void *inp" mod=""/>
    <arg type="size_t" id="bits" text="size_t bits" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="WHIRLPOOL_Final" text="int WHIRLPOOL_Final(unsigned char *md, WHIRLPOOL_CTX *c)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/whrlpool.h">
  <args>
    <arg type="unsigned char" id="md" text="unsigned char *md" mod=""/>
    <arg type="WHIRLPOOL_CTX" id="c" text="WHIRLPOOL_CTX *c" mod=""/>
  </args>
</fdecl>
<fdecl type="unsigned char" id="WHIRLPOOL" text="unsigned char *WHIRLPOOL(const void *inp, size_t bytes, unsigned char *md)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/whrlpool.h">
  <args>
    <arg type="const void" id="inp" text="const void *inp" mod=""/>
    <arg type="size_t" id="bytes" text="size_t bytes" mod=""/>
    <arg type="unsigned char" id="md" text="unsigned char *md" mod=""/>
  </args>
</fdecl>

<fdecl type="int" id="OBJ_NAME_init" text="int OBJ_NAME_init(void)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="void" id="ANON0" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="OBJ_NAME_new_index" text="int OBJ_NAME_new_index(unsigned long (*hash_func) (const char *),&#10;                       int (*cmp_func) (const char *, const char *),&#10;                       void (*free_func) (const char *, int, const char *))" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="unsigned long" id="hash_func" text="unsigned long (*hash_func) (const char *)" mod=""/>
    <arg type="int" id="cmp_func" text="int (*cmp_func) (const char *, const char *)" mod=""/>
    <arg type="void" id="free_func" text="void (*free_func) (const char *, int, const char *)" mod=""/>
  </args>
</fdecl>
<fdecl type="const char" id="OBJ_NAME_get" text="const char *OBJ_NAME_get(const char *name, int type)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="const char" id="name" text="const char *name" mod=""/>
    <arg type="int" id="type" text="int type" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="OBJ_NAME_add" text="int OBJ_NAME_add(const char *name, int type, const char *data)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="const char" id="name" text="const char *name" mod=""/>
    <arg type="int" id="type" text="int type" mod=""/>
    <arg type="const char" id="data" text="const char *data" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="OBJ_NAME_remove" text="int OBJ_NAME_remove(const char *name, int type)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="const char" id="name" text="const char *name" mod=""/>
    <arg type="int" id="type" text="int type" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="OBJ_NAME_cleanup" text="void OBJ_NAME_cleanup(int type)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="int" id="type" text="int type" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="OBJ_NAME_do_all" text="void OBJ_NAME_do_all(int type, void (*fn) (const OBJ_NAME *, void *arg),&#10;                     void *arg)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="int" id="type" text="int type" mod=""/>
    <arg type="void" id="fn" text="void (*fn) (const OBJ_NAME *, void *arg)" mod=""/>
    <arg type="void" id="arg" text="void *arg" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="OBJ_NAME_do_all_sorted" text="void OBJ_NAME_do_all_sorted(int type,&#10;                            void (*fn) (const OBJ_NAME *, void *arg),&#10;                            void *arg)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="int" id="type" text="int type" mod=""/>
    <arg type="void" id="fn" text="void (*fn) (const OBJ_NAME *, void *arg)" mod=""/>
    <arg type="void" id="arg" text="void *arg" mod=""/>
  </args>
</fdecl>
<fdecl type="ASN1_OBJECT" id="OBJ_dup" text="ASN1_OBJECT *OBJ_dup(const ASN1_OBJECT *o)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="const ASN1_OBJECT" id="o" text="const ASN1_OBJECT *o" mod=""/>
  </args>
</fdecl>
<fdecl type="ASN1_OBJECT" id="OBJ_nid2obj" text="ASN1_OBJECT *OBJ_nid2obj(int n)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="int" id="n" text="int n" mod=""/>
  </args>
</fdecl>
<fdecl type="const char" id="OBJ_nid2ln" text="const char *OBJ_nid2ln(int n)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="int" id="n" text="int n" mod=""/>
  </args>
</fdecl>
<fdecl type="const char" id="OBJ_nid2sn" text="const char *OBJ_nid2sn(int n)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="int" id="n" text="int n" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="OBJ_obj2nid" text="int OBJ_obj2nid(const ASN1_OBJECT *o)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="const ASN1_OBJECT" id="o" text="const ASN1_OBJECT *o" mod=""/>
  </args>
</fdecl>
<fdecl type="ASN1_OBJECT" id="OBJ_txt2obj" text="ASN1_OBJECT *OBJ_txt2obj(const char *s, int no_name)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="const char" id="s" text="const char *s" mod=""/>
    <arg type="int" id="no_name" text="int no_name" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="OBJ_obj2txt" text="int OBJ_obj2txt(char *buf, int buf_len, const ASN1_OBJECT *a, int no_name)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="char" id="buf" text="char *buf" mod=""/>
    <arg type="int" id="buf_len" text="int buf_len" mod=""/>
    <arg type="const ASN1_OBJECT" id="a" text="const ASN1_OBJECT *a" mod=""/>
    <arg type="int" id="no_name" text="int no_name" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="OBJ_txt2nid" text="int OBJ_txt2nid(const char *s)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="const char" id="s" text="const char *s" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="OBJ_ln2nid" text="int OBJ_ln2nid(const char *s)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="const char" id="s" text="const char *s" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="OBJ_sn2nid" text="int OBJ_sn2nid(const char *s)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="const char" id="s" text="const char *s" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="OBJ_cmp" text="int OBJ_cmp(const ASN1_OBJECT *a, const ASN1_OBJECT *b)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="const ASN1_OBJECT" id="a" text="const ASN1_OBJECT *a" mod=""/>
    <arg type="const ASN1_OBJECT" id="b" text="const ASN1_OBJECT *b" mod=""/>
  </args>
</fdecl>
<fdecl type="const void" id="OBJ_bsearch_" text="const void *OBJ_bsearch_(const void *key, const void *base, int num, int size,&#10;                         int (*cmp) (const void *, const void *))" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="const void" id="key" text="const void *key" mod=""/>
    <arg type="const void" id="base" text="const void *base" mod=""/>
    <arg type="int" id="num" text="int num" mod=""/>
    <arg type="int" id="size" text="int size" mod=""/>
    <arg type="int" id="cmp" text="int (*cmp) (const void *, const void *)" mod=""/>
  </args>
</fdecl>
<fdecl type="const void" id="OBJ_bsearch_ex_" text="const void *OBJ_bsearch_ex_(const void *key, const void *base, int num,&#10;                            int size,&#10;                            int (*cmp) (const void *, const void *),&#10;                            int flags)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="const void" id="key" text="const void *key" mod=""/>
    <arg type="const void" id="base" text="const void *base" mod=""/>
    <arg type="int" id="num" text="int num" mod=""/>
    <arg type="int" id="size" text="int size" mod=""/>
    <arg type="int" id="cmp" text="int (*cmp) (const void *, const void *)" mod=""/>
    <arg type="int" id="flags" text="int flags" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="OBJ_new_nid" text="int OBJ_new_nid(int num)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="int" id="num" text="int num" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="OBJ_add_object" text="int OBJ_add_object(const ASN1_OBJECT *obj)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="const ASN1_OBJECT" id="obj" text="const ASN1_OBJECT *obj" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="OBJ_create" text="int OBJ_create(const char *oid, const char *sn, const char *ln)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="const char" id="oid" text="const char *oid" mod=""/>
    <arg type="const char" id="sn" text="const char *sn" mod=""/>
    <arg type="const char" id="ln" text="const char *ln" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="OBJ_cleanup" text="void OBJ_cleanup(void)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="void" id="ANON1" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="OBJ_create_objects" text="int OBJ_create_objects(BIO *in)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="BIO" id="in" text="BIO *in" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="OBJ_find_sigid_algs" text="int OBJ_find_sigid_algs(int signid, int *pdig_nid, int *ppkey_nid)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="int" id="signid" text="int signid" mod=""/>
    <arg type="int" id="pdig_nid" text="int *pdig_nid" mod=""/>
    <arg type="int" id="ppkey_nid" text="int *ppkey_nid" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="OBJ_find_sigid_by_algs" text="int OBJ_find_sigid_by_algs(int *psignid, int dig_nid, int pkey_nid)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="int" id="psignid" text="int *psignid" mod=""/>
    <arg type="int" id="dig_nid" text="int dig_nid" mod=""/>
    <arg type="int" id="pkey_nid" text="int pkey_nid" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="OBJ_add_sigid" text="int OBJ_add_sigid(int signid, int dig_id, int pkey_id)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="int" id="signid" text="int signid" mod=""/>
    <arg type="int" id="dig_id" text="int dig_id" mod=""/>
    <arg type="int" id="pkey_id" text="int pkey_id" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="OBJ_sigid_free" text="void OBJ_sigid_free(void)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="void" id="ANON2" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="check_defer" text="void check_defer(int nid)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="int" id="nid" text="int nid" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="ERR_load_OBJ_strings" text="void ERR_load_OBJ_strings(void)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/objects.h">
  <args>
    <arg type="void" id="ANON3" text="void" mod=""/>
  </args>
</fdecl>

<fdecl type="const char" id="DES_options" text="const char *DES_options(void)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="void" id="ANON0" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="DES_ecb3_encrypt" text="void DES_ecb3_encrypt(const_DES_cblock *input, DES_cblock *output,&#10;                      DES_key_schedule *ks1, DES_key_schedule *ks2,&#10;                      DES_key_schedule *ks3, int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="const_DES_cblock" id="input" text="const_DES_cblock *input" mod=""/>
    <arg type="DES_cblock" id="output" text="DES_cblock *output" mod=""/>
    <arg type="DES_key_schedule" id="ks1" text="DES_key_schedule *ks1" mod=""/>
    <arg type="DES_key_schedule" id="ks2" text="DES_key_schedule *ks2" mod=""/>
    <arg type="DES_key_schedule" id="ks3" text="DES_key_schedule *ks3" mod=""/>
    <arg type="int" id="enc" text="int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="unsigned int" id="DES_cbc_cksum" text="unsigned int &#10;# 135 &quot;../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h&quot;&#10;        DES_cbc_cksum(const unsigned char *input, DES_cblock *output,&#10;                       long length, DES_key_schedule *schedule,&#10;                       const_DES_cblock *ivec)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="const unsigned char" id="input" text="const unsigned char *input" mod=""/>
    <arg type="DES_cblock" id="output" text="DES_cblock *output" mod=""/>
    <arg type="long" id="length" text="long length" mod=""/>
    <arg type="DES_key_schedule" id="schedule" text="DES_key_schedule *schedule" mod=""/>
    <arg type="const_DES_cblock" id="ivec" text="const_DES_cblock *ivec" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="DES_cbc_encrypt" text="void DES_cbc_encrypt(const unsigned char *input, unsigned char *output,&#10;                     long length, DES_key_schedule *schedule,&#10;                     DES_cblock *ivec, int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="const unsigned char" id="input" text="const unsigned char *input" mod=""/>
    <arg type="unsigned char" id="output" text="unsigned char *output" mod=""/>
    <arg type="long" id="length" text="long length" mod=""/>
    <arg type="DES_key_schedule" id="schedule" text="DES_key_schedule *schedule" mod=""/>
    <arg type="DES_cblock" id="ivec" text="DES_cblock *ivec" mod=""/>
    <arg type="int" id="enc" text="int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="DES_ncbc_encrypt" text="void DES_ncbc_encrypt(const unsigned char *input, unsigned char *output,&#10;                      long length, DES_key_schedule *schedule,&#10;                      DES_cblock *ivec, int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="const unsigned char" id="input" text="const unsigned char *input" mod=""/>
    <arg type="unsigned char" id="output" text="unsigned char *output" mod=""/>
    <arg type="long" id="length" text="long length" mod=""/>
    <arg type="DES_key_schedule" id="schedule" text="DES_key_schedule *schedule" mod=""/>
    <arg type="DES_cblock" id="ivec" text="DES_cblock *ivec" mod=""/>
    <arg type="int" id="enc" text="int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="DES_xcbc_encrypt" text="void DES_xcbc_encrypt(const unsigned char *input, unsigned char *output,&#10;                      long length, DES_key_schedule *schedule,&#10;                      DES_cblock *ivec, const_DES_cblock *inw,&#10;                      const_DES_cblock *outw, int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="const unsigned char" id="input" text="const unsigned char *input" mod=""/>
    <arg type="unsigned char" id="output" text="unsigned char *output" mod=""/>
    <arg type="long" id="length" text="long length" mod=""/>
    <arg type="DES_key_schedule" id="schedule" text="DES_key_schedule *schedule" mod=""/>
    <arg type="DES_cblock" id="ivec" text="DES_cblock *ivec" mod=""/>
    <arg type="const_DES_cblock" id="inw" text="const_DES_cblock *inw" mod=""/>
    <arg type="const_DES_cblock" id="outw" text="const_DES_cblock *outw" mod=""/>
    <arg type="int" id="enc" text="int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="DES_cfb_encrypt" text="void DES_cfb_encrypt(const unsigned char *in, unsigned char *out, int numbits,&#10;                     long length, DES_key_schedule *schedule,&#10;                     DES_cblock *ivec, int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="int" id="numbits" text="int numbits" mod=""/>
    <arg type="long" id="length" text="long length" mod=""/>
    <arg type="DES_key_schedule" id="schedule" text="DES_key_schedule *schedule" mod=""/>
    <arg type="DES_cblock" id="ivec" text="DES_cblock *ivec" mod=""/>
    <arg type="int" id="enc" text="int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="DES_ecb_encrypt" text="void DES_ecb_encrypt(const_DES_cblock *input, DES_cblock *output,&#10;                     DES_key_schedule *ks, int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="const_DES_cblock" id="input" text="const_DES_cblock *input" mod=""/>
    <arg type="DES_cblock" id="output" text="DES_cblock *output" mod=""/>
    <arg type="DES_key_schedule" id="ks" text="DES_key_schedule *ks" mod=""/>
    <arg type="int" id="enc" text="int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="DES_encrypt1" text="void DES_encrypt1(&#10;# 165 &quot;../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h&quot; 3 4&#10;                 unsigned int &#10;# 165 &quot;../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h&quot;&#10;                          *data, DES_key_schedule *ks, int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="unsigned int" id="data" text="unsigned int &#10;# 165 &quot;../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h&quot;&#10;                          *data" mod=""/>
    <arg type="DES_key_schedule" id="ks" text="DES_key_schedule *ks" mod=""/>
    <arg type="int" id="enc" text="int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="DES_encrypt2" text="void DES_encrypt2(&#10;# 175 &quot;../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h&quot; 3 4&#10;                 unsigned int &#10;# 175 &quot;../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h&quot;&#10;                          *data, DES_key_schedule *ks, int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="unsigned int" id="data" text="unsigned int &#10;# 175 &quot;../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h&quot;&#10;                          *data" mod=""/>
    <arg type="DES_key_schedule" id="ks" text="DES_key_schedule *ks" mod=""/>
    <arg type="int" id="enc" text="int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="DES_encrypt3" text="void DES_encrypt3(&#10;# 177 &quot;../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h&quot; 3 4&#10;                 unsigned int &#10;# 177 &quot;../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h&quot;&#10;                          *data, DES_key_schedule *ks1,&#10;                  DES_key_schedule *ks2, DES_key_schedule *ks3)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="unsigned int" id="data" text="unsigned int &#10;# 177 &quot;../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h&quot;&#10;                          *data" mod=""/>
    <arg type="DES_key_schedule" id="ks1" text="DES_key_schedule *ks1" mod=""/>
    <arg type="DES_key_schedule" id="ks2" text="DES_key_schedule *ks2" mod=""/>
    <arg type="DES_key_schedule" id="ks3" text="DES_key_schedule *ks3" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="DES_decrypt3" text="void DES_decrypt3(&#10;# 179 &quot;../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h&quot; 3 4&#10;                 unsigned int &#10;# 179 &quot;../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h&quot;&#10;                          *data, DES_key_schedule *ks1,&#10;                  DES_key_schedule *ks2, DES_key_schedule *ks3)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="unsigned int" id="data" text="unsigned int &#10;# 179 &quot;../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h&quot;&#10;                          *data" mod=""/>
    <arg type="DES_key_schedule" id="ks1" text="DES_key_schedule *ks1" mod=""/>
    <arg type="DES_key_schedule" id="ks2" text="DES_key_schedule *ks2" mod=""/>
    <arg type="DES_key_schedule" id="ks3" text="DES_key_schedule *ks3" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="DES_ede3_cbc_encrypt" text="void DES_ede3_cbc_encrypt(const unsigned char *input, unsigned char *output,&#10;                          long length,&#10;                          DES_key_schedule *ks1, DES_key_schedule *ks2,&#10;                          DES_key_schedule *ks3, DES_cblock *ivec, int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="const unsigned char" id="input" text="const unsigned char *input" mod=""/>
    <arg type="unsigned char" id="output" text="unsigned char *output" mod=""/>
    <arg type="long" id="length" text="long length" mod=""/>
    <arg type="DES_key_schedule" id="ks1" text="DES_key_schedule *ks1" mod=""/>
    <arg type="DES_key_schedule" id="ks2" text="DES_key_schedule *ks2" mod=""/>
    <arg type="DES_key_schedule" id="ks3" text="DES_key_schedule *ks3" mod=""/>
    <arg type="DES_cblock" id="ivec" text="DES_cblock *ivec" mod=""/>
    <arg type="int" id="enc" text="int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="DES_ede3_cbcm_encrypt" text="void DES_ede3_cbcm_encrypt(const unsigned char *in, unsigned char *out,&#10;                           long length,&#10;                           DES_key_schedule *ks1, DES_key_schedule *ks2,&#10;                           DES_key_schedule *ks3,&#10;                           DES_cblock *ivec1, DES_cblock *ivec2, int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="long" id="length" text="long length" mod=""/>
    <arg type="DES_key_schedule" id="ks1" text="DES_key_schedule *ks1" mod=""/>
    <arg type="DES_key_schedule" id="ks2" text="DES_key_schedule *ks2" mod=""/>
    <arg type="DES_key_schedule" id="ks3" text="DES_key_schedule *ks3" mod=""/>
    <arg type="DES_cblock" id="ivec1" text="DES_cblock *ivec1" mod=""/>
    <arg type="DES_cblock" id="ivec2" text="DES_cblock *ivec2" mod=""/>
    <arg type="int" id="enc" text="int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="DES_ede3_cfb64_encrypt" text="void DES_ede3_cfb64_encrypt(const unsigned char *in, unsigned char *out,&#10;                            long length, DES_key_schedule *ks1,&#10;                            DES_key_schedule *ks2, DES_key_schedule *ks3,&#10;                            DES_cblock *ivec, int *num, int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="long" id="length" text="long length" mod=""/>
    <arg type="DES_key_schedule" id="ks1" text="DES_key_schedule *ks1" mod=""/>
    <arg type="DES_key_schedule" id="ks2" text="DES_key_schedule *ks2" mod=""/>
    <arg type="DES_key_schedule" id="ks3" text="DES_key_schedule *ks3" mod=""/>
    <arg type="DES_cblock" id="ivec" text="DES_cblock *ivec" mod=""/>
    <arg type="int" id="num" text="int *num" mod=""/>
    <arg type="int" id="enc" text="int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="DES_ede3_cfb_encrypt" text="void DES_ede3_cfb_encrypt(const unsigned char *in, unsigned char *out,&#10;                          int numbits, long length, DES_key_schedule *ks1,&#10;                          DES_key_schedule *ks2, DES_key_schedule *ks3,&#10;                          DES_cblock *ivec, int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="int" id="numbits" text="int numbits" mod=""/>
    <arg type="long" id="length" text="long length" mod=""/>
    <arg type="DES_key_schedule" id="ks1" text="DES_key_schedule *ks1" mod=""/>
    <arg type="DES_key_schedule" id="ks2" text="DES_key_schedule *ks2" mod=""/>
    <arg type="DES_key_schedule" id="ks3" text="DES_key_schedule *ks3" mod=""/>
    <arg type="DES_cblock" id="ivec" text="DES_cblock *ivec" mod=""/>
    <arg type="int" id="enc" text="int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="DES_ede3_ofb64_encrypt" text="void DES_ede3_ofb64_encrypt(const unsigned char *in, unsigned char *out,&#10;                            long length, DES_key_schedule *ks1,&#10;                            DES_key_schedule *ks2, DES_key_schedule *ks3,&#10;                            DES_cblock *ivec, int *num)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="long" id="length" text="long length" mod=""/>
    <arg type="DES_key_schedule" id="ks1" text="DES_key_schedule *ks1" mod=""/>
    <arg type="DES_key_schedule" id="ks2" text="DES_key_schedule *ks2" mod=""/>
    <arg type="DES_key_schedule" id="ks3" text="DES_key_schedule *ks3" mod=""/>
    <arg type="DES_cblock" id="ivec" text="DES_cblock *ivec" mod=""/>
    <arg type="int" id="num" text="int *num" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="DES_enc_read" text="int DES_enc_read(int fd, void *buf, int len, DES_key_schedule *sched,&#10;                 DES_cblock *iv)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="int" id="fd" text="int fd" mod=""/>
    <arg type="void" id="buf" text="void *buf" mod=""/>
    <arg type="int" id="len" text="int len" mod=""/>
    <arg type="DES_key_schedule" id="sched" text="DES_key_schedule *sched" mod=""/>
    <arg type="DES_cblock" id="iv" text="DES_cblock *iv" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="DES_enc_write" text="int DES_enc_write(int fd, const void *buf, int len, DES_key_schedule *sched,&#10;                  DES_cblock *iv)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="int" id="fd" text="int fd" mod=""/>
    <arg type="const void" id="buf" text="const void *buf" mod=""/>
    <arg type="int" id="len" text="int len" mod=""/>
    <arg type="DES_key_schedule" id="sched" text="DES_key_schedule *sched" mod=""/>
    <arg type="DES_cblock" id="iv" text="DES_cblock *iv" mod=""/>
  </args>
</fdecl>
<fdecl type="char" id="DES_fcrypt" text="char *DES_fcrypt(const char *buf, const char *salt, char *ret)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="const char" id="buf" text="const char *buf" mod=""/>
    <arg type="const char" id="salt" text="const char *salt" mod=""/>
    <arg type="char" id="ret" text="char *ret" mod=""/>
  </args>
</fdecl>
<fdecl type="char" id="DES_crypt" text="char *DES_crypt(const char *buf, const char *salt)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="const char" id="buf" text="const char *buf" mod=""/>
    <arg type="const char" id="salt" text="const char *salt" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="DES_ofb_encrypt" text="void DES_ofb_encrypt(const unsigned char *in, unsigned char *out, int numbits,&#10;                     long length, DES_key_schedule *schedule,&#10;                     DES_cblock *ivec)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="int" id="numbits" text="int numbits" mod=""/>
    <arg type="long" id="length" text="long length" mod=""/>
    <arg type="DES_key_schedule" id="schedule" text="DES_key_schedule *schedule" mod=""/>
    <arg type="DES_cblock" id="ivec" text="DES_cblock *ivec" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="DES_pcbc_encrypt" text="void DES_pcbc_encrypt(const unsigned char *input, unsigned char *output,&#10;                      long length, DES_key_schedule *schedule,&#10;                      DES_cblock *ivec, int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="const unsigned char" id="input" text="const unsigned char *input" mod=""/>
    <arg type="unsigned char" id="output" text="unsigned char *output" mod=""/>
    <arg type="long" id="length" text="long length" mod=""/>
    <arg type="DES_key_schedule" id="schedule" text="DES_key_schedule *schedule" mod=""/>
    <arg type="DES_cblock" id="ivec" text="DES_cblock *ivec" mod=""/>
    <arg type="int" id="enc" text="int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="unsigned int" id="DES_quad_cksum" text="unsigned int &#10;# 219 &quot;../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h&quot;&#10;        DES_quad_cksum(const unsigned char *input, DES_cblock output[],&#10;                        long length, int out_count, DES_cblock *seed)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="const unsigned char" id="input" text="const unsigned char *input" mod=""/>
    <arg type="DES_cblock" id="output" text="DES_cblock output[]" mod="output[]"/>
    <arg type="long" id="length" text="long length" mod=""/>
    <arg type="int" id="out_count" text="int out_count" mod=""/>
    <arg type="DES_cblock" id="seed" text="DES_cblock *seed" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="DES_random_key" text="int DES_random_key(DES_cblock *ret)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="DES_cblock" id="ret" text="DES_cblock *ret" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="DES_set_odd_parity" text="void DES_set_odd_parity(DES_cblock *key)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="DES_cblock" id="key" text="DES_cblock *key" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="DES_check_key_parity" text="int DES_check_key_parity(const_DES_cblock *key)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="const_DES_cblock" id="key" text="const_DES_cblock *key" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="DES_is_weak_key" text="int DES_is_weak_key(const_DES_cblock *key)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="const_DES_cblock" id="key" text="const_DES_cblock *key" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="DES_set_key" text="int DES_set_key(const_DES_cblock *key, DES_key_schedule *schedule)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="const_DES_cblock" id="key" text="const_DES_cblock *key" mod=""/>
    <arg type="DES_key_schedule" id="schedule" text="DES_key_schedule *schedule" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="DES_key_sched" text="int DES_key_sched(const_DES_cblock *key, DES_key_schedule *schedule)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="const_DES_cblock" id="key" text="const_DES_cblock *key" mod=""/>
    <arg type="DES_key_schedule" id="schedule" text="DES_key_schedule *schedule" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="DES_set_key_checked" text="int DES_set_key_checked(const_DES_cblock *key, DES_key_schedule *schedule)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="const_DES_cblock" id="key" text="const_DES_cblock *key" mod=""/>
    <arg type="DES_key_schedule" id="schedule" text="DES_key_schedule *schedule" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="DES_set_key_unchecked" text="void DES_set_key_unchecked(const_DES_cblock *key, DES_key_schedule *schedule)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="const_DES_cblock" id="key" text="const_DES_cblock *key" mod=""/>
    <arg type="DES_key_schedule" id="schedule" text="DES_key_schedule *schedule" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="DES_string_to_key" text="void DES_string_to_key(const char *str, DES_cblock *key)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="const char" id="str" text="const char *str" mod=""/>
    <arg type="DES_cblock" id="key" text="DES_cblock *key" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="DES_string_to_2keys" text="void DES_string_to_2keys(const char *str, DES_cblock *key1, DES_cblock *key2)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="const char" id="str" text="const char *str" mod=""/>
    <arg type="DES_cblock" id="key1" text="DES_cblock *key1" mod=""/>
    <arg type="DES_cblock" id="key2" text="DES_cblock *key2" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="DES_cfb64_encrypt" text="void DES_cfb64_encrypt(const unsigned char *in, unsigned char *out,&#10;                       long length, DES_key_schedule *schedule,&#10;                       DES_cblock *ivec, int *num, int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="long" id="length" text="long length" mod=""/>
    <arg type="DES_key_schedule" id="schedule" text="DES_key_schedule *schedule" mod=""/>
    <arg type="DES_cblock" id="ivec" text="DES_cblock *ivec" mod=""/>
    <arg type="int" id="num" text="int *num" mod=""/>
    <arg type="int" id="enc" text="int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="DES_ofb64_encrypt" text="void DES_ofb64_encrypt(const unsigned char *in, unsigned char *out,&#10;                       long length, DES_key_schedule *schedule,&#10;                       DES_cblock *ivec, int *num)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="long" id="length" text="long length" mod=""/>
    <arg type="DES_key_schedule" id="schedule" text="DES_key_schedule *schedule" mod=""/>
    <arg type="DES_cblock" id="ivec" text="DES_cblock *ivec" mod=""/>
    <arg type="int" id="num" text="int *num" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="DES_read_password" text="int DES_read_password(DES_cblock *key, const char *prompt, int verify)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="DES_cblock" id="key" text="DES_cblock *key" mod=""/>
    <arg type="const char" id="prompt" text="const char *prompt" mod=""/>
    <arg type="int" id="verify" text="int verify" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="DES_read_2passwords" text="int DES_read_2passwords(DES_cblock *key1, DES_cblock *key2,&#10;                        const char *prompt, int verify)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/des.h">
  <args>
    <arg type="DES_cblock" id="key1" text="DES_cblock *key1" mod=""/>
    <arg type="DES_cblock" id="key2" text="DES_cblock *key2" mod=""/>
    <arg type="const char" id="prompt" text="const char *prompt" mod=""/>
    <arg type="int" id="verify" text="int verify" mod=""/>
  </args>
</fdecl>

<fdecl type="const char" id="AES_options" text="const char *AES_options(void)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/aes.h">
  <args>
    <arg type="void" id="ANON0" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="AES_set_encrypt_key" text="int AES_set_encrypt_key(const unsigned char *userKey, const int bits,&#10;                        AES_KEY *key)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/aes.h">
  <args>
    <arg type="const unsigned char" id="userKey" text="const unsigned char *userKey" mod=""/>
    <arg type="const int" id="bits" text="const int bits" mod=""/>
    <arg type="AES_KEY" id="key" text="AES_KEY *key" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="AES_set_decrypt_key" text="int AES_set_decrypt_key(const unsigned char *userKey, const int bits,&#10;                        AES_KEY *key)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/aes.h">
  <args>
    <arg type="const unsigned char" id="userKey" text="const unsigned char *userKey" mod=""/>
    <arg type="const int" id="bits" text="const int bits" mod=""/>
    <arg type="AES_KEY" id="key" text="AES_KEY *key" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="private_AES_set_encrypt_key" text="int private_AES_set_encrypt_key(const unsigned char *userKey, const int bits,&#10;                                AES_KEY *key)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/aes.h">
  <args>
    <arg type="const unsigned char" id="userKey" text="const unsigned char *userKey" mod=""/>
    <arg type="const int" id="bits" text="const int bits" mod=""/>
    <arg type="AES_KEY" id="key" text="AES_KEY *key" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="private_AES_set_decrypt_key" text="int private_AES_set_decrypt_key(const unsigned char *userKey, const int bits,&#10;                                AES_KEY *key)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/aes.h">
  <args>
    <arg type="const unsigned char" id="userKey" text="const unsigned char *userKey" mod=""/>
    <arg type="const int" id="bits" text="const int bits" mod=""/>
    <arg type="AES_KEY" id="key" text="AES_KEY *key" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="AES_encrypt" text="void AES_encrypt(const unsigned char *in, unsigned char *out,&#10;                 const AES_KEY *key)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/aes.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="const AES_KEY" id="key" text="const AES_KEY *key" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="AES_decrypt" text="void AES_decrypt(const unsigned char *in, unsigned char *out,&#10;                 const AES_KEY *key)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/aes.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="const AES_KEY" id="key" text="const AES_KEY *key" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="AES_ecb_encrypt" text="void AES_ecb_encrypt(const unsigned char *in, unsigned char *out,&#10;                     const AES_KEY *key, const int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/aes.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="const AES_KEY" id="key" text="const AES_KEY *key" mod=""/>
    <arg type="const int" id="enc" text="const int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="AES_cbc_encrypt" text="void AES_cbc_encrypt(const unsigned char *in, unsigned char *out,&#10;                     size_t length, const AES_KEY *key,&#10;                     unsigned char *ivec, const int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/aes.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="length" text="size_t length" mod=""/>
    <arg type="const AES_KEY" id="key" text="const AES_KEY *key" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char *ivec" mod=""/>
    <arg type="const int" id="enc" text="const int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="AES_cfb128_encrypt" text="void AES_cfb128_encrypt(const unsigned char *in, unsigned char *out,&#10;                        size_t length, const AES_KEY *key,&#10;                        unsigned char *ivec, int *num, const int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/aes.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="length" text="size_t length" mod=""/>
    <arg type="const AES_KEY" id="key" text="const AES_KEY *key" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char *ivec" mod=""/>
    <arg type="int" id="num" text="int *num" mod=""/>
    <arg type="const int" id="enc" text="const int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="AES_cfb1_encrypt" text="void AES_cfb1_encrypt(const unsigned char *in, unsigned char *out,&#10;                      size_t length, const AES_KEY *key,&#10;                      unsigned char *ivec, int *num, const int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/aes.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="length" text="size_t length" mod=""/>
    <arg type="const AES_KEY" id="key" text="const AES_KEY *key" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char *ivec" mod=""/>
    <arg type="int" id="num" text="int *num" mod=""/>
    <arg type="const int" id="enc" text="const int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="AES_cfb8_encrypt" text="void AES_cfb8_encrypt(const unsigned char *in, unsigned char *out,&#10;                      size_t length, const AES_KEY *key,&#10;                      unsigned char *ivec, int *num, const int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/aes.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="length" text="size_t length" mod=""/>
    <arg type="const AES_KEY" id="key" text="const AES_KEY *key" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char *ivec" mod=""/>
    <arg type="int" id="num" text="int *num" mod=""/>
    <arg type="const int" id="enc" text="const int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="AES_ofb128_encrypt" text="void AES_ofb128_encrypt(const unsigned char *in, unsigned char *out,&#10;                        size_t length, const AES_KEY *key,&#10;                        unsigned char *ivec, int *num)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/aes.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="length" text="size_t length" mod=""/>
    <arg type="const AES_KEY" id="key" text="const AES_KEY *key" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char *ivec" mod=""/>
    <arg type="int" id="num" text="int *num" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="AES_ctr128_encrypt" text="void AES_ctr128_encrypt(const unsigned char *in, unsigned char *out,&#10;                        size_t length, const AES_KEY *key,&#10;                        unsigned char ivec[16],&#10;                        unsigned char ecount_buf[16],&#10;                        unsigned int *num)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/aes.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="length" text="size_t length" mod=""/>
    <arg type="const AES_KEY" id="key" text="const AES_KEY *key" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char ivec[16]" mod="ivec[16]"/>
    <arg type="unsigned char" id="ecount_buf" text="unsigned char ecount_buf[16]" mod="ecount_buf[16]"/>
    <arg type="unsigned int" id="num" text="unsigned int *num" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="AES_ige_encrypt" text="void AES_ige_encrypt(const unsigned char *in, unsigned char *out,&#10;                     size_t length, const AES_KEY *key,&#10;                     unsigned char *ivec, const int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/aes.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="length" text="size_t length" mod=""/>
    <arg type="const AES_KEY" id="key" text="const AES_KEY *key" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char *ivec" mod=""/>
    <arg type="const int" id="enc" text="const int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="AES_bi_ige_encrypt" text="void AES_bi_ige_encrypt(const unsigned char *in, unsigned char *out,&#10;                        size_t length, const AES_KEY *key,&#10;                        const AES_KEY *key2, const unsigned char *ivec,&#10;                        const int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/aes.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="length" text="size_t length" mod=""/>
    <arg type="const AES_KEY" id="key" text="const AES_KEY *key" mod=""/>
    <arg type="const AES_KEY" id="key2" text="const AES_KEY *key2" mod=""/>
    <arg type="const unsigned char" id="ivec" text="const unsigned char *ivec" mod=""/>
    <arg type="const int" id="enc" text="const int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="AES_wrap_key" text="int AES_wrap_key(AES_KEY *key, const unsigned char *iv,&#10;                 unsigned char *out,&#10;                 const unsigned char *in, unsigned int inlen)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/aes.h">
  <args>
    <arg type="AES_KEY" id="key" text="AES_KEY *key" mod=""/>
    <arg type="const unsigned char" id="iv" text="const unsigned char *iv" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned int" id="inlen" text="unsigned int inlen" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="AES_unwrap_key" text="int AES_unwrap_key(AES_KEY *key, const unsigned char *iv,&#10;                   unsigned char *out,&#10;                   const unsigned char *in, unsigned int inlen)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/aes.h">
  <args>
    <arg type="AES_KEY" id="key" text="AES_KEY *key" mod=""/>
    <arg type="const unsigned char" id="iv" text="const unsigned char *iv" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned int" id="inlen" text="unsigned int inlen" mod=""/>
  </args>
</fdecl>

<fdecl type="void" id="RC2_set_key" text="void RC2_set_key(RC2_KEY *key, int len, const unsigned char *data, int bits)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/rc2.h">
  <args>
    <arg type="RC2_KEY" id="key" text="RC2_KEY *key" mod=""/>
    <arg type="int" id="len" text="int len" mod=""/>
    <arg type="const unsigned char" id="data" text="const unsigned char *data" mod=""/>
    <arg type="int" id="bits" text="int bits" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="RC2_ecb_encrypt" text="void RC2_ecb_encrypt(const unsigned char *in, unsigned char *out,&#10;                     RC2_KEY *key, int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/rc2.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="RC2_KEY" id="key" text="RC2_KEY *key" mod=""/>
    <arg type="int" id="enc" text="int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="RC2_encrypt" text="void RC2_encrypt(unsigned long *data, RC2_KEY *key)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/rc2.h">
  <args>
    <arg type="unsigned long" id="data" text="unsigned long *data" mod=""/>
    <arg type="RC2_KEY" id="key" text="RC2_KEY *key" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="RC2_decrypt" text="void RC2_decrypt(unsigned long *data, RC2_KEY *key)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/rc2.h">
  <args>
    <arg type="unsigned long" id="data" text="unsigned long *data" mod=""/>
    <arg type="RC2_KEY" id="key" text="RC2_KEY *key" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="RC2_cbc_encrypt" text="void RC2_cbc_encrypt(const unsigned char *in, unsigned char *out, long length,&#10;                     RC2_KEY *ks, unsigned char *iv, int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/rc2.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="long" id="length" text="long length" mod=""/>
    <arg type="RC2_KEY" id="ks" text="RC2_KEY *ks" mod=""/>
    <arg type="unsigned char" id="iv" text="unsigned char *iv" mod=""/>
    <arg type="int" id="enc" text="int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="RC2_cfb64_encrypt" text="void RC2_cfb64_encrypt(const unsigned char *in, unsigned char *out,&#10;                       long length, RC2_KEY *schedule, unsigned char *ivec,&#10;                       int *num, int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/rc2.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="long" id="length" text="long length" mod=""/>
    <arg type="RC2_KEY" id="schedule" text="RC2_KEY *schedule" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char *ivec" mod=""/>
    <arg type="int" id="num" text="int *num" mod=""/>
    <arg type="int" id="enc" text="int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="RC2_ofb64_encrypt" text="void RC2_ofb64_encrypt(const unsigned char *in, unsigned char *out,&#10;                       long length, RC2_KEY *schedule, unsigned char *ivec,&#10;                       int *num)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/rc2.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="long" id="length" text="long length" mod=""/>
    <arg type="RC2_KEY" id="schedule" text="RC2_KEY *schedule" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char *ivec" mod=""/>
    <arg type="int" id="num" text="int *num" mod=""/>
  </args>
</fdecl>

<fdecl type="const char" id="RC4_options" text="const char *RC4_options(void)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/rc4.h">
  <args>
    <arg type="void" id="ANON0" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="RC4_set_key" text="void RC4_set_key(RC4_KEY *key, int len, const unsigned char *data)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/rc4.h">
  <args>
    <arg type="RC4_KEY" id="key" text="RC4_KEY *key" mod=""/>
    <arg type="int" id="len" text="int len" mod=""/>
    <arg type="const unsigned char" id="data" text="const unsigned char *data" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="private_RC4_set_key" text="void private_RC4_set_key(RC4_KEY *key, int len, const unsigned char *data)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/rc4.h">
  <args>
    <arg type="RC4_KEY" id="key" text="RC4_KEY *key" mod=""/>
    <arg type="int" id="len" text="int len" mod=""/>
    <arg type="const unsigned char" id="data" text="const unsigned char *data" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="RC4" text="void RC4(RC4_KEY *key, size_t len, const unsigned char *indata,&#10;         unsigned char *outdata)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/rc4.h">
  <args>
    <arg type="RC4_KEY" id="key" text="RC4_KEY *key" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
    <arg type="const unsigned char" id="indata" text="const unsigned char *indata" mod=""/>
    <arg type="unsigned char" id="outdata" text="unsigned char *outdata" mod=""/>
  </args>
</fdecl>

<fdecl type="void" id="BF_set_key" text="void BF_set_key(BF_KEY *key, int len, const unsigned char *data)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/blowfish.h">
  <args>
    <arg type="BF_KEY" id="key" text="BF_KEY *key" mod=""/>
    <arg type="int" id="len" text="int len" mod=""/>
    <arg type="const unsigned char" id="data" text="const unsigned char *data" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="BF_encrypt" text="void BF_encrypt(unsigned int *data, const BF_KEY *key)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/blowfish.h">
  <args>
    <arg type="unsigned int" id="data" text="unsigned int *data" mod=""/>
    <arg type="const BF_KEY" id="key" text="const BF_KEY *key" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="BF_decrypt" text="void BF_decrypt(unsigned int *data, const BF_KEY *key)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/blowfish.h">
  <args>
    <arg type="unsigned int" id="data" text="unsigned int *data" mod=""/>
    <arg type="const BF_KEY" id="key" text="const BF_KEY *key" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="BF_ecb_encrypt" text="void BF_ecb_encrypt(const unsigned char *in, unsigned char *out,&#10;                    const BF_KEY *key, int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/blowfish.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="const BF_KEY" id="key" text="const BF_KEY *key" mod=""/>
    <arg type="int" id="enc" text="int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="BF_cbc_encrypt" text="void BF_cbc_encrypt(const unsigned char *in, unsigned char *out, long length,&#10;                    const BF_KEY *schedule, unsigned char *ivec, int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/blowfish.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="long" id="length" text="long length" mod=""/>
    <arg type="const BF_KEY" id="schedule" text="const BF_KEY *schedule" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char *ivec" mod=""/>
    <arg type="int" id="enc" text="int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="BF_cfb64_encrypt" text="void BF_cfb64_encrypt(const unsigned char *in, unsigned char *out,&#10;                      long length, const BF_KEY *schedule,&#10;                      unsigned char *ivec, int *num, int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/blowfish.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="long" id="length" text="long length" mod=""/>
    <arg type="const BF_KEY" id="schedule" text="const BF_KEY *schedule" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char *ivec" mod=""/>
    <arg type="int" id="num" text="int *num" mod=""/>
    <arg type="int" id="enc" text="int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="BF_ofb64_encrypt" text="void BF_ofb64_encrypt(const unsigned char *in, unsigned char *out,&#10;                      long length, const BF_KEY *schedule,&#10;                      unsigned char *ivec, int *num)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/blowfish.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="long" id="length" text="long length" mod=""/>
    <arg type="const BF_KEY" id="schedule" text="const BF_KEY *schedule" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char *ivec" mod=""/>
    <arg type="int" id="num" text="int *num" mod=""/>
  </args>
</fdecl>
<fdecl type="const char" id="BF_options" text="const char *BF_options(void)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/blowfish.h">
  <args>
    <arg type="void" id="ANON0" text="void" mod=""/>
  </args>
</fdecl>

<fdecl type="void" id="CAST_set_key" text="void CAST_set_key(CAST_KEY *key, int len, const unsigned char *data)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/cast.h">
  <args>
    <arg type="CAST_KEY" id="key" text="CAST_KEY *key" mod=""/>
    <arg type="int" id="len" text="int len" mod=""/>
    <arg type="const unsigned char" id="data" text="const unsigned char *data" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CAST_ecb_encrypt" text="void CAST_ecb_encrypt(const unsigned char *in, unsigned char *out,&#10;                      const CAST_KEY *key, int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/cast.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="const CAST_KEY" id="key" text="const CAST_KEY *key" mod=""/>
    <arg type="int" id="enc" text="int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CAST_encrypt" text="void CAST_encrypt(unsigned int *data, const CAST_KEY *key)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/cast.h">
  <args>
    <arg type="unsigned int" id="data" text="unsigned int *data" mod=""/>
    <arg type="const CAST_KEY" id="key" text="const CAST_KEY *key" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CAST_decrypt" text="void CAST_decrypt(unsigned int *data, const CAST_KEY *key)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/cast.h">
  <args>
    <arg type="unsigned int" id="data" text="unsigned int *data" mod=""/>
    <arg type="const CAST_KEY" id="key" text="const CAST_KEY *key" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CAST_cbc_encrypt" text="void CAST_cbc_encrypt(const unsigned char *in, unsigned char *out,&#10;                      long length, const CAST_KEY *ks, unsigned char *iv,&#10;                      int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/cast.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="long" id="length" text="long length" mod=""/>
    <arg type="const CAST_KEY" id="ks" text="const CAST_KEY *ks" mod=""/>
    <arg type="unsigned char" id="iv" text="unsigned char *iv" mod=""/>
    <arg type="int" id="enc" text="int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CAST_cfb64_encrypt" text="void CAST_cfb64_encrypt(const unsigned char *in, unsigned char *out,&#10;                        long length, const CAST_KEY *schedule,&#10;                        unsigned char *ivec, int *num, int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/cast.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="long" id="length" text="long length" mod=""/>
    <arg type="const CAST_KEY" id="schedule" text="const CAST_KEY *schedule" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char *ivec" mod=""/>
    <arg type="int" id="num" text="int *num" mod=""/>
    <arg type="int" id="enc" text="int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CAST_ofb64_encrypt" text="void CAST_ofb64_encrypt(const unsigned char *in, unsigned char *out,&#10;                        long length, const CAST_KEY *schedule,&#10;                        unsigned char *ivec, int *num)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/cast.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="long" id="length" text="long length" mod=""/>
    <arg type="const CAST_KEY" id="schedule" text="const CAST_KEY *schedule" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char *ivec" mod=""/>
    <arg type="int" id="num" text="int *num" mod=""/>
  </args>
</fdecl>

<fdecl type="int" id="Camellia_set_key" text="int Camellia_set_key(const unsigned char *userKey, const int bits,&#10;                     CAMELLIA_KEY *key)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/camellia.h">
  <args>
    <arg type="const unsigned char" id="userKey" text="const unsigned char *userKey" mod=""/>
    <arg type="const int" id="bits" text="const int bits" mod=""/>
    <arg type="CAMELLIA_KEY" id="key" text="CAMELLIA_KEY *key" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="Camellia_encrypt" text="void Camellia_encrypt(const unsigned char *in, unsigned char *out,&#10;                      const CAMELLIA_KEY *key)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/camellia.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="const CAMELLIA_KEY" id="key" text="const CAMELLIA_KEY *key" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="Camellia_decrypt" text="void Camellia_decrypt(const unsigned char *in, unsigned char *out,&#10;                      const CAMELLIA_KEY *key)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/camellia.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="const CAMELLIA_KEY" id="key" text="const CAMELLIA_KEY *key" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="Camellia_ecb_encrypt" text="void Camellia_ecb_encrypt(const unsigned char *in, unsigned char *out,&#10;                          const CAMELLIA_KEY *key, const int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/camellia.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="const CAMELLIA_KEY" id="key" text="const CAMELLIA_KEY *key" mod=""/>
    <arg type="const int" id="enc" text="const int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="Camellia_cbc_encrypt" text="void Camellia_cbc_encrypt(const unsigned char *in, unsigned char *out,&#10;                          size_t length, const CAMELLIA_KEY *key,&#10;                          unsigned char *ivec, const int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/camellia.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="length" text="size_t length" mod=""/>
    <arg type="const CAMELLIA_KEY" id="key" text="const CAMELLIA_KEY *key" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char *ivec" mod=""/>
    <arg type="const int" id="enc" text="const int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="Camellia_cfb128_encrypt" text="void Camellia_cfb128_encrypt(const unsigned char *in, unsigned char *out,&#10;                             size_t length, const CAMELLIA_KEY *key,&#10;                             unsigned char *ivec, int *num, const int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/camellia.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="length" text="size_t length" mod=""/>
    <arg type="const CAMELLIA_KEY" id="key" text="const CAMELLIA_KEY *key" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char *ivec" mod=""/>
    <arg type="int" id="num" text="int *num" mod=""/>
    <arg type="const int" id="enc" text="const int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="Camellia_cfb1_encrypt" text="void Camellia_cfb1_encrypt(const unsigned char *in, unsigned char *out,&#10;                           size_t length, const CAMELLIA_KEY *key,&#10;                           unsigned char *ivec, int *num, const int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/camellia.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="length" text="size_t length" mod=""/>
    <arg type="const CAMELLIA_KEY" id="key" text="const CAMELLIA_KEY *key" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char *ivec" mod=""/>
    <arg type="int" id="num" text="int *num" mod=""/>
    <arg type="const int" id="enc" text="const int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="Camellia_cfb8_encrypt" text="void Camellia_cfb8_encrypt(const unsigned char *in, unsigned char *out,&#10;                           size_t length, const CAMELLIA_KEY *key,&#10;                           unsigned char *ivec, int *num, const int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/camellia.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="length" text="size_t length" mod=""/>
    <arg type="const CAMELLIA_KEY" id="key" text="const CAMELLIA_KEY *key" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char *ivec" mod=""/>
    <arg type="int" id="num" text="int *num" mod=""/>
    <arg type="const int" id="enc" text="const int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="Camellia_ofb128_encrypt" text="void Camellia_ofb128_encrypt(const unsigned char *in, unsigned char *out,&#10;                             size_t length, const CAMELLIA_KEY *key,&#10;                             unsigned char *ivec, int *num)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/camellia.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="length" text="size_t length" mod=""/>
    <arg type="const CAMELLIA_KEY" id="key" text="const CAMELLIA_KEY *key" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char *ivec" mod=""/>
    <arg type="int" id="num" text="int *num" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="Camellia_ctr128_encrypt" text="void Camellia_ctr128_encrypt(const unsigned char *in, unsigned char *out,&#10;                             size_t length, const CAMELLIA_KEY *key,&#10;                             unsigned char ivec[16],&#10;                             unsigned char ecount_buf[16],&#10;                             unsigned int *num)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/camellia.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="length" text="size_t length" mod=""/>
    <arg type="const CAMELLIA_KEY" id="key" text="const CAMELLIA_KEY *key" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char ivec[16]" mod="ivec[16]"/>
    <arg type="unsigned char" id="ecount_buf" text="unsigned char ecount_buf[16]" mod="ecount_buf[16]"/>
    <arg type="unsigned int" id="num" text="unsigned int *num" mod=""/>
  </args>
</fdecl>

<fdecl type="void" id="block128_f" text="typedef void (*block128_f) (const unsigned char in[16],&#10;                            unsigned char out[16], const void *key)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char in[16]" mod="in[16]"/>
    <arg type="unsigned char" id="out" text="unsigned char out[16]" mod="out[16]"/>
    <arg type="const void" id="key" text="const void *key" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="cbc128_f" text="typedef void (*cbc128_f) (const unsigned char *in, unsigned char *out,&#10;                          size_t len, const void *key,&#10;                          unsigned char ivec[16], int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
    <arg type="const void" id="key" text="const void *key" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char ivec[16]" mod="ivec[16]"/>
    <arg type="int" id="enc" text="int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="ctr128_f" text="typedef void (*ctr128_f) (const unsigned char *in, unsigned char *out,&#10;                          size_t blocks, const void *key,&#10;                          const unsigned char ivec[16])" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="blocks" text="size_t blocks" mod=""/>
    <arg type="const void" id="key" text="const void *key" mod=""/>
    <arg type="const unsigned char" id="ivec" text="const unsigned char ivec[16]" mod="ivec[16]"/>
  </args>
</fdecl>
<fdecl type="void" id="ccm128_f" text="typedef void (*ccm128_f) (const unsigned char *in, unsigned char *out,&#10;                          size_t blocks, const void *key,&#10;                          const unsigned char ivec[16],&#10;                          unsigned char cmac[16])" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="blocks" text="size_t blocks" mod=""/>
    <arg type="const void" id="key" text="const void *key" mod=""/>
    <arg type="const unsigned char" id="ivec" text="const unsigned char ivec[16]" mod="ivec[16]"/>
    <arg type="unsigned char" id="cmac" text="unsigned char cmac[16]" mod="cmac[16]"/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_cbc128_encrypt" text="void CRYPTO_cbc128_encrypt(const unsigned char *in, unsigned char *out,&#10;                           size_t len, const void *key,&#10;                           unsigned char ivec[16], block128_f block)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
    <arg type="const void" id="key" text="const void *key" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char ivec[16]" mod="ivec[16]"/>
    <arg type="block128_f" id="block" text="block128_f block" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_cbc128_decrypt" text="void CRYPTO_cbc128_decrypt(const unsigned char *in, unsigned char *out,&#10;                           size_t len, const void *key,&#10;                           unsigned char ivec[16], block128_f block)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
    <arg type="const void" id="key" text="const void *key" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char ivec[16]" mod="ivec[16]"/>
    <arg type="block128_f" id="block" text="block128_f block" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_ctr128_encrypt" text="void CRYPTO_ctr128_encrypt(const unsigned char *in, unsigned char *out,&#10;                           size_t len, const void *key,&#10;                           unsigned char ivec[16],&#10;                           unsigned char ecount_buf[16], unsigned int *num,&#10;                           block128_f block)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
    <arg type="const void" id="key" text="const void *key" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char ivec[16]" mod="ivec[16]"/>
    <arg type="unsigned char" id="ecount_buf" text="unsigned char ecount_buf[16]" mod="ecount_buf[16]"/>
    <arg type="unsigned int" id="num" text="unsigned int *num" mod=""/>
    <arg type="block128_f" id="block" text="block128_f block" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_ctr128_encrypt_ctr32" text="void CRYPTO_ctr128_encrypt_ctr32(const unsigned char *in, unsigned char *out,&#10;                                 size_t len, const void *key,&#10;                                 unsigned char ivec[16],&#10;                                 unsigned char ecount_buf[16],&#10;                                 unsigned int *num, ctr128_f ctr)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
    <arg type="const void" id="key" text="const void *key" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char ivec[16]" mod="ivec[16]"/>
    <arg type="unsigned char" id="ecount_buf" text="unsigned char ecount_buf[16]" mod="ecount_buf[16]"/>
    <arg type="unsigned int" id="num" text="unsigned int *num" mod=""/>
    <arg type="ctr128_f" id="ctr" text="ctr128_f ctr" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_ofb128_encrypt" text="void CRYPTO_ofb128_encrypt(const unsigned char *in, unsigned char *out,&#10;                           size_t len, const void *key,&#10;                           unsigned char ivec[16], int *num,&#10;                           block128_f block)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
    <arg type="const void" id="key" text="const void *key" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char ivec[16]" mod="ivec[16]"/>
    <arg type="int" id="num" text="int *num" mod=""/>
    <arg type="block128_f" id="block" text="block128_f block" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_cfb128_encrypt" text="void CRYPTO_cfb128_encrypt(const unsigned char *in, unsigned char *out,&#10;                           size_t len, const void *key,&#10;                           unsigned char ivec[16], int *num,&#10;                           int enc, block128_f block)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
    <arg type="const void" id="key" text="const void *key" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char ivec[16]" mod="ivec[16]"/>
    <arg type="int" id="num" text="int *num" mod=""/>
    <arg type="int" id="enc" text="int enc" mod=""/>
    <arg type="block128_f" id="block" text="block128_f block" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_cfb128_8_encrypt" text="void CRYPTO_cfb128_8_encrypt(const unsigned char *in, unsigned char *out,&#10;                             size_t length, const void *key,&#10;                             unsigned char ivec[16], int *num,&#10;                             int enc, block128_f block)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="length" text="size_t length" mod=""/>
    <arg type="const void" id="key" text="const void *key" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char ivec[16]" mod="ivec[16]"/>
    <arg type="int" id="num" text="int *num" mod=""/>
    <arg type="int" id="enc" text="int enc" mod=""/>
    <arg type="block128_f" id="block" text="block128_f block" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_cfb128_1_encrypt" text="void CRYPTO_cfb128_1_encrypt(const unsigned char *in, unsigned char *out,&#10;                             size_t bits, const void *key,&#10;                             unsigned char ivec[16], int *num,&#10;                             int enc, block128_f block)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="bits" text="size_t bits" mod=""/>
    <arg type="const void" id="key" text="const void *key" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char ivec[16]" mod="ivec[16]"/>
    <arg type="int" id="num" text="int *num" mod=""/>
    <arg type="int" id="enc" text="int enc" mod=""/>
    <arg type="block128_f" id="block" text="block128_f block" mod=""/>
  </args>
</fdecl>
<fdecl type="size_t" id="CRYPTO_cts128_encrypt_block" text="size_t CRYPTO_cts128_encrypt_block(const unsigned char *in,&#10;                                   unsigned char *out, size_t len,&#10;                                   const void *key, unsigned char ivec[16],&#10;                                   block128_f block)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
    <arg type="const void" id="key" text="const void *key" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char ivec[16]" mod="ivec[16]"/>
    <arg type="block128_f" id="block" text="block128_f block" mod=""/>
  </args>
</fdecl>
<fdecl type="size_t" id="CRYPTO_cts128_encrypt" text="size_t CRYPTO_cts128_encrypt(const unsigned char *in, unsigned char *out,&#10;                             size_t len, const void *key,&#10;                             unsigned char ivec[16], cbc128_f cbc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
    <arg type="const void" id="key" text="const void *key" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char ivec[16]" mod="ivec[16]"/>
    <arg type="cbc128_f" id="cbc" text="cbc128_f cbc" mod=""/>
  </args>
</fdecl>
<fdecl type="size_t" id="CRYPTO_cts128_decrypt_block" text="size_t CRYPTO_cts128_decrypt_block(const unsigned char *in,&#10;                                   unsigned char *out, size_t len,&#10;                                   const void *key, unsigned char ivec[16],&#10;                                   block128_f block)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
    <arg type="const void" id="key" text="const void *key" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char ivec[16]" mod="ivec[16]"/>
    <arg type="block128_f" id="block" text="block128_f block" mod=""/>
  </args>
</fdecl>
<fdecl type="size_t" id="CRYPTO_cts128_decrypt" text="size_t CRYPTO_cts128_decrypt(const unsigned char *in, unsigned char *out,&#10;                             size_t len, const void *key,&#10;                             unsigned char ivec[16], cbc128_f cbc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
    <arg type="const void" id="key" text="const void *key" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char ivec[16]" mod="ivec[16]"/>
    <arg type="cbc128_f" id="cbc" text="cbc128_f cbc" mod=""/>
  </args>
</fdecl>
<fdecl type="size_t" id="CRYPTO_nistcts128_encrypt_block" text="size_t CRYPTO_nistcts128_encrypt_block(const unsigned char *in,&#10;                                       unsigned char *out, size_t len,&#10;                                       const void *key,&#10;                                       unsigned char ivec[16],&#10;                                       block128_f block)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
    <arg type="const void" id="key" text="const void *key" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char ivec[16]" mod="ivec[16]"/>
    <arg type="block128_f" id="block" text="block128_f block" mod=""/>
  </args>
</fdecl>
<fdecl type="size_t" id="CRYPTO_nistcts128_encrypt" text="size_t CRYPTO_nistcts128_encrypt(const unsigned char *in, unsigned char *out,&#10;                                 size_t len, const void *key,&#10;                                 unsigned char ivec[16], cbc128_f cbc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
    <arg type="const void" id="key" text="const void *key" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char ivec[16]" mod="ivec[16]"/>
    <arg type="cbc128_f" id="cbc" text="cbc128_f cbc" mod=""/>
  </args>
</fdecl>
<fdecl type="size_t" id="CRYPTO_nistcts128_decrypt_block" text="size_t CRYPTO_nistcts128_decrypt_block(const unsigned char *in,&#10;                                       unsigned char *out, size_t len,&#10;                                       const void *key,&#10;                                       unsigned char ivec[16],&#10;                                       block128_f block)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
    <arg type="const void" id="key" text="const void *key" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char ivec[16]" mod="ivec[16]"/>
    <arg type="block128_f" id="block" text="block128_f block" mod=""/>
  </args>
</fdecl>
<fdecl type="size_t" id="CRYPTO_nistcts128_decrypt" text="size_t CRYPTO_nistcts128_decrypt(const unsigned char *in, unsigned char *out,&#10;                                 size_t len, const void *key,&#10;                                 unsigned char ivec[16], cbc128_f cbc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
    <arg type="const void" id="key" text="const void *key" mod=""/>
    <arg type="unsigned char" id="ivec" text="unsigned char ivec[16]" mod="ivec[16]"/>
    <arg type="cbc128_f" id="cbc" text="cbc128_f cbc" mod=""/>
  </args>
</fdecl>
<fdecl type="GCM128_CONTEXT" id="CRYPTO_gcm128_new" text="GCM128_CONTEXT *CRYPTO_gcm128_new(void *key, block128_f block)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="void" id="key" text="void *key" mod=""/>
    <arg type="block128_f" id="block" text="block128_f block" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_gcm128_init" text="void CRYPTO_gcm128_init(GCM128_CONTEXT *ctx, void *key, block128_f block)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="GCM128_CONTEXT" id="ctx" text="GCM128_CONTEXT *ctx" mod=""/>
    <arg type="void" id="key" text="void *key" mod=""/>
    <arg type="block128_f" id="block" text="block128_f block" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_gcm128_setiv" text="void CRYPTO_gcm128_setiv(GCM128_CONTEXT *ctx, const unsigned char *iv,&#10;                         size_t len)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="GCM128_CONTEXT" id="ctx" text="GCM128_CONTEXT *ctx" mod=""/>
    <arg type="const unsigned char" id="iv" text="const unsigned char *iv" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_gcm128_aad" text="int CRYPTO_gcm128_aad(GCM128_CONTEXT *ctx, const unsigned char *aad,&#10;                      size_t len)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="GCM128_CONTEXT" id="ctx" text="GCM128_CONTEXT *ctx" mod=""/>
    <arg type="const unsigned char" id="aad" text="const unsigned char *aad" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_gcm128_encrypt" text="int CRYPTO_gcm128_encrypt(GCM128_CONTEXT *ctx,&#10;                          const unsigned char *in, unsigned char *out,&#10;                          size_t len)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="GCM128_CONTEXT" id="ctx" text="GCM128_CONTEXT *ctx" mod=""/>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_gcm128_decrypt" text="int CRYPTO_gcm128_decrypt(GCM128_CONTEXT *ctx,&#10;                          const unsigned char *in, unsigned char *out,&#10;                          size_t len)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="GCM128_CONTEXT" id="ctx" text="GCM128_CONTEXT *ctx" mod=""/>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_gcm128_encrypt_ctr32" text="int CRYPTO_gcm128_encrypt_ctr32(GCM128_CONTEXT *ctx,&#10;                                const unsigned char *in, unsigned char *out,&#10;                                size_t len, ctr128_f stream)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="GCM128_CONTEXT" id="ctx" text="GCM128_CONTEXT *ctx" mod=""/>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
    <arg type="ctr128_f" id="stream" text="ctr128_f stream" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_gcm128_decrypt_ctr32" text="int CRYPTO_gcm128_decrypt_ctr32(GCM128_CONTEXT *ctx,&#10;                                const unsigned char *in, unsigned char *out,&#10;                                size_t len, ctr128_f stream)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="GCM128_CONTEXT" id="ctx" text="GCM128_CONTEXT *ctx" mod=""/>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
    <arg type="ctr128_f" id="stream" text="ctr128_f stream" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_gcm128_finish" text="int CRYPTO_gcm128_finish(GCM128_CONTEXT *ctx, const unsigned char *tag,&#10;                         size_t len)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="GCM128_CONTEXT" id="ctx" text="GCM128_CONTEXT *ctx" mod=""/>
    <arg type="const unsigned char" id="tag" text="const unsigned char *tag" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_gcm128_tag" text="void CRYPTO_gcm128_tag(GCM128_CONTEXT *ctx, unsigned char *tag, size_t len)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="GCM128_CONTEXT" id="ctx" text="GCM128_CONTEXT *ctx" mod=""/>
    <arg type="unsigned char" id="tag" text="unsigned char *tag" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_gcm128_release" text="void CRYPTO_gcm128_release(GCM128_CONTEXT *ctx)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="GCM128_CONTEXT" id="ctx" text="GCM128_CONTEXT *ctx" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_ccm128_init" text="void CRYPTO_ccm128_init(CCM128_CONTEXT *ctx,&#10;                        unsigned int M, unsigned int L, void *key,&#10;                        block128_f block)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="CCM128_CONTEXT" id="ctx" text="CCM128_CONTEXT *ctx" mod=""/>
    <arg type="unsigned int" id="M" text="unsigned int M" mod=""/>
    <arg type="unsigned int" id="L" text="unsigned int L" mod=""/>
    <arg type="void" id="key" text="void *key" mod=""/>
    <arg type="block128_f" id="block" text="block128_f block" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_ccm128_setiv" text="int CRYPTO_ccm128_setiv(CCM128_CONTEXT *ctx, const unsigned char *nonce,&#10;                        size_t nlen, size_t mlen)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="CCM128_CONTEXT" id="ctx" text="CCM128_CONTEXT *ctx" mod=""/>
    <arg type="const unsigned char" id="nonce" text="const unsigned char *nonce" mod=""/>
    <arg type="size_t" id="nlen" text="size_t nlen" mod=""/>
    <arg type="size_t" id="mlen" text="size_t mlen" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_ccm128_aad" text="void CRYPTO_ccm128_aad(CCM128_CONTEXT *ctx, const unsigned char *aad,&#10;                       size_t alen)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="CCM128_CONTEXT" id="ctx" text="CCM128_CONTEXT *ctx" mod=""/>
    <arg type="const unsigned char" id="aad" text="const unsigned char *aad" mod=""/>
    <arg type="size_t" id="alen" text="size_t alen" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_ccm128_encrypt" text="int CRYPTO_ccm128_encrypt(CCM128_CONTEXT *ctx, const unsigned char *inp,&#10;                          unsigned char *out, size_t len)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="CCM128_CONTEXT" id="ctx" text="CCM128_CONTEXT *ctx" mod=""/>
    <arg type="const unsigned char" id="inp" text="const unsigned char *inp" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_ccm128_decrypt" text="int CRYPTO_ccm128_decrypt(CCM128_CONTEXT *ctx, const unsigned char *inp,&#10;                          unsigned char *out, size_t len)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="CCM128_CONTEXT" id="ctx" text="CCM128_CONTEXT *ctx" mod=""/>
    <arg type="const unsigned char" id="inp" text="const unsigned char *inp" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_ccm128_encrypt_ccm64" text="int CRYPTO_ccm128_encrypt_ccm64(CCM128_CONTEXT *ctx, const unsigned char *inp,&#10;                                unsigned char *out, size_t len,&#10;                                ccm128_f stream)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="CCM128_CONTEXT" id="ctx" text="CCM128_CONTEXT *ctx" mod=""/>
    <arg type="const unsigned char" id="inp" text="const unsigned char *inp" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
    <arg type="ccm128_f" id="stream" text="ccm128_f stream" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_ccm128_decrypt_ccm64" text="int CRYPTO_ccm128_decrypt_ccm64(CCM128_CONTEXT *ctx, const unsigned char *inp,&#10;                                unsigned char *out, size_t len,&#10;                                ccm128_f stream)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="CCM128_CONTEXT" id="ctx" text="CCM128_CONTEXT *ctx" mod=""/>
    <arg type="const unsigned char" id="inp" text="const unsigned char *inp" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
    <arg type="ccm128_f" id="stream" text="ccm128_f stream" mod=""/>
  </args>
</fdecl>
<fdecl type="size_t" id="CRYPTO_ccm128_tag" text="size_t CRYPTO_ccm128_tag(CCM128_CONTEXT *ctx, unsigned char *tag, size_t len)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="CCM128_CONTEXT" id="ctx" text="CCM128_CONTEXT *ctx" mod=""/>
    <arg type="unsigned char" id="tag" text="unsigned char *tag" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_xts128_encrypt" text="int CRYPTO_xts128_encrypt(const XTS128_CONTEXT *ctx,&#10;                          const unsigned char iv[16],&#10;                          const unsigned char *inp, unsigned char *out,&#10;                          size_t len, int enc)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="const XTS128_CONTEXT" id="ctx" text="const XTS128_CONTEXT *ctx" mod=""/>
    <arg type="const unsigned char" id="iv" text="const unsigned char iv[16]" mod="iv[16]"/>
    <arg type="const unsigned char" id="inp" text="const unsigned char *inp" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
    <arg type="int" id="enc" text="int enc" mod=""/>
  </args>
</fdecl>
<fdecl type="size_t" id="CRYPTO_128_wrap" text="size_t CRYPTO_128_wrap(void *key, const unsigned char *iv,&#10;                       unsigned char *out,&#10;                       const unsigned char *in, size_t inlen,&#10;                       block128_f block)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="void" id="key" text="void *key" mod=""/>
    <arg type="const unsigned char" id="iv" text="const unsigned char *iv" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="size_t" id="inlen" text="size_t inlen" mod=""/>
    <arg type="block128_f" id="block" text="block128_f block" mod=""/>
  </args>
</fdecl>
<fdecl type="size_t" id="CRYPTO_128_unwrap" text="size_t CRYPTO_128_unwrap(void *key, const unsigned char *iv,&#10;                         unsigned char *out,&#10;                         const unsigned char *in, size_t inlen,&#10;                         block128_f block)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/modes.h">
  <args>
    <arg type="void" id="key" text="void *key" mod=""/>
    <arg type="const unsigned char" id="iv" text="const unsigned char *iv" mod=""/>
    <arg type="unsigned char" id="out" text="unsigned char *out" mod=""/>
    <arg type="const unsigned char" id="in" text="const unsigned char *in" mod=""/>
    <arg type="size_t" id="inlen" text="size_t inlen" mod=""/>
    <arg type="block128_f" id="block" text="block128_f block" mod=""/>
  </args>
</fdecl>

<fdecl type="void" id="HMAC_CTX_init" text="void HMAC_CTX_init(HMAC_CTX *ctx)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/hmac.h">
  <args>
    <arg type="HMAC_CTX" id="ctx" text="HMAC_CTX *ctx" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="HMAC_CTX_cleanup" text="void HMAC_CTX_cleanup(HMAC_CTX *ctx)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/hmac.h">
  <args>
    <arg type="HMAC_CTX" id="ctx" text="HMAC_CTX *ctx" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="HMAC_Init" text="int HMAC_Init(HMAC_CTX *ctx, const void *key, int len, const EVP_MD *md)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/hmac.h">
  <args>
    <arg type="HMAC_CTX" id="ctx" text="HMAC_CTX *ctx" mod=""/>
    <arg type="const void" id="key" text="const void *key" mod=""/>
    <arg type="int" id="len" text="int len" mod=""/>
    <arg type="const EVP_MD" id="md" text="const EVP_MD *md" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="HMAC_Init_ex" text="int HMAC_Init_ex(HMAC_CTX *ctx, const void *key, int len,&#10;                 const EVP_MD *md, ENGINE *impl)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/hmac.h">
  <args>
    <arg type="HMAC_CTX" id="ctx" text="HMAC_CTX *ctx" mod=""/>
    <arg type="const void" id="key" text="const void *key" mod=""/>
    <arg type="int" id="len" text="int len" mod=""/>
    <arg type="const EVP_MD" id="md" text="const EVP_MD *md" mod=""/>
    <arg type="ENGINE" id="impl" text="ENGINE *impl" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="HMAC_Update" text="int HMAC_Update(HMAC_CTX *ctx, const unsigned char *data, size_t len)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/hmac.h">
  <args>
    <arg type="HMAC_CTX" id="ctx" text="HMAC_CTX *ctx" mod=""/>
    <arg type="const unsigned char" id="data" text="const unsigned char *data" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="HMAC_Final" text="int HMAC_Final(HMAC_CTX *ctx, unsigned char *md, unsigned int *len)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/hmac.h">
  <args>
    <arg type="HMAC_CTX" id="ctx" text="HMAC_CTX *ctx" mod=""/>
    <arg type="unsigned char" id="md" text="unsigned char *md" mod=""/>
    <arg type="unsigned int" id="len" text="unsigned int *len" mod=""/>
  </args>
</fdecl>
<fdecl type="unsigned char" id="HMAC" text="unsigned char *HMAC(const EVP_MD *evp_md, const void *key, int key_len,&#10;                    const unsigned char *d, size_t n, unsigned char *md,&#10;                    unsigned int *md_len)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/hmac.h">
  <args>
    <arg type="const EVP_MD" id="evp_md" text="const EVP_MD *evp_md" mod=""/>
    <arg type="const void" id="key" text="const void *key" mod=""/>
    <arg type="int" id="key_len" text="int key_len" mod=""/>
    <arg type="const unsigned char" id="d" text="const unsigned char *d" mod=""/>
    <arg type="size_t" id="n" text="size_t n" mod=""/>
    <arg type="unsigned char" id="md" text="unsigned char *md" mod=""/>
    <arg type="unsigned int" id="md_len" text="unsigned int *md_len" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="HMAC_CTX_copy" text="int HMAC_CTX_copy(HMAC_CTX *dctx, HMAC_CTX *sctx)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/hmac.h">
  <args>
    <arg type="HMAC_CTX" id="dctx" text="HMAC_CTX *dctx" mod=""/>
    <arg type="HMAC_CTX" id="sctx" text="HMAC_CTX *sctx" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="HMAC_CTX_set_flags" text="void HMAC_CTX_set_flags(HMAC_CTX *ctx, unsigned long flags)" file="../sujet1/bdd/openssl/openssl-1.0.2h/headers/hmac.h">
  <args>
    <arg type="HMAC_CTX" id="ctx" text="HMAC_CTX *ctx" mod=""/>
    <arg type="unsigned long" id="flags" text="unsigned long flags" mod=""/>
  </args>
</fdecl>
