<root>
2016/10/28 00:28:58 FATAL   3215 No expression was successfully parsed


<fdecl type="unsigned" id="blast_in" text="typedef unsigned (*blast_in)(void *how, unsigned char **buf)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/blast.h">
  <args>
    <arg type="void" id="how" text="void *how" mod=""/>
    <arg type="unsigned char" id="buf" text="unsigned char **buf" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="blast_out" text="typedef int (*blast_out)(void *how, unsigned char *buf, unsigned len)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/blast.h">
  <args>
    <arg type="void" id="how" text="void *how" mod=""/>
    <arg type="unsigned char" id="buf" text="unsigned char *buf" mod=""/>
    <arg type="unsigned" id="len" text="unsigned len" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="blast" text="int blast(blast_in infun, void *inhow, blast_out outfun, void *outhow)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/blast.h">
  <args>
    <arg type="blast_in" id="infun" text="blast_in infun" mod=""/>
    <arg type="void" id="inhow" text="void *inhow" mod=""/>
    <arg type="blast_out" id="outfun" text="blast_out outfun" mod=""/>
    <arg type="void" id="outhow" text="void *outhow" mod=""/>
  </args>
</fdecl>

<fdecl type="gzlog" id="gzlog_open" text="gzlog *gzlog_open(char *path)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/gzlog.h">
  <args>
    <arg type="char" id="path" text="char *path" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="gzlog_write" text="int gzlog_write(gzlog *log, void *data, size_t len)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/gzlog.h">
  <args>
    <arg type="gzlog" id="log" text="gzlog *log" mod=""/>
    <arg type="void" id="data" text="void *data" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="gzlog_compress" text="int gzlog_compress(gzlog *log)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/gzlog.h">
  <args>
    <arg type="gzlog" id="log" text="gzlog *log" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="gzlog_close" text="int gzlog_close(gzlog *log)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/gzlog.h">
  <args>
    <arg type="gzlog" id="log" text="gzlog *log" mod=""/>
  </args>
</fdecl>
2016/10/28 00:29:08 FATAL   4390 Error in SLIF parse: No lexeme found at line 8, column 34
* String before error: ers/infback9.h"\nZEXTERN int ZEXPORT inflateBack9\s
* The error was at line 8, column 34, and at character 0x004f 'O', ...
* here: OF((z_stream FAR *strm,\n\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s
Marpa::R2 exception at /home/bicodul/perl5/lib/perl5/MarpaX/Languages/C/AST/Impl.pm line 73.

Last position:

At line 8, column 21

ZEXTERN int ZEXPORT inflateBack9 OF((z_stream FAR *strm,
--------------------^
2016/10/28 00:29:09 FATAL   4394 Error in SLIF parse: No lexeme found at line 8, column 36
* String before error: rs/inffast.h"\nvoid ZLIB_INTERNAL inflate_fast OF(
* The error was at line 8, column 36, and at character 0x0028 '(', ...
* here: (z_streamp strm, unsigned start));\n
Marpa::R2 exception at /home/bicodul/perl5/lib/perl5/MarpaX/Languages/C/AST/Impl.pm line 73.

Last position:

At line 8, column 35

void ZLIB_INTERNAL inflate_fast OF((z_streamp strm, unsigned start));
----------------------------------^

<fdecl type="void" id="_tr_init" text="void _tr_init (deflate_state *s)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/deflate.h">
  <args>
    <arg type="deflate_state" id="s" text="deflate_state *s" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="_tr_tally" text="int _tr_tally (deflate_state *s, unsigned dist, unsigned lc)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/deflate.h">
  <args>
    <arg type="deflate_state" id="s" text="deflate_state *s" mod=""/>
    <arg type="unsigned" id="dist" text="unsigned dist" mod=""/>
    <arg type="unsigned" id="lc" text="unsigned lc" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="_tr_flush_block" text="void _tr_flush_block (deflate_state *s, charf *buf, ulg stored_len, int last)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/deflate.h">
  <args>
    <arg type="deflate_state" id="s" text="deflate_state *s" mod=""/>
    <arg type="charf" id="buf" text="charf *buf" mod=""/>
    <arg type="ulg" id="stored_len" text="ulg stored_len" mod=""/>
    <arg type="int" id="last" text="int last" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="_tr_flush_bits" text="void _tr_flush_bits (deflate_state *s)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/deflate.h">
  <args>
    <arg type="deflate_state" id="s" text="deflate_state *s" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="_tr_align" text="void _tr_align (deflate_state *s)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/deflate.h">
  <args>
    <arg type="deflate_state" id="s" text="deflate_state *s" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="_tr_stored_block" text="void _tr_stored_block (deflate_state *s, charf *buf, ulg stored_len, int last)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/deflate.h">
  <args>
    <arg type="deflate_state" id="s" text="deflate_state *s" mod=""/>
    <arg type="charf" id="buf" text="charf *buf" mod=""/>
    <arg type="ulg" id="stored_len" text="ulg stored_len" mod=""/>
    <arg type="int" id="last" text="int last" mod=""/>
  </args>
</fdecl>

<fdecl type="void" id="gz_error" text="void gz_error (gz_statep, int, const char *)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/gzguts.h">
  <args>
    <arg type="gz_statep" id="ANON0" text="gz_statep" mod=""/>
    <arg type="int" id="ANON1" text="int" mod=""/>
    <arg type="const char" id="ANON2" text="const char *" mod=""/>
  </args>
</fdecl>
2016/10/28 00:29:37 FATAL   5514 Error in SLIF parse: No lexeme found at line 58, column 23
* String before error: have;\n    unsigned wnext;\n    unsigned char FAR\s
* The error was at line 58, column 23, and at character 0x002a '*', ...
* here: *window;\n\n    unsigned long hold;\n    unsigned\s
Marpa::R2 exception at /home/bicodul/perl5/lib/perl5/MarpaX/Languages/C/AST/Impl.pm line 73.

Last position:

At line 58, column 19

    unsigned char FAR *window;
------------------^
2016/10/28 00:29:38 FATAL   5617 Error in SLIF parse: No lexeme found at line 19, column 23
* String before error: \nstruct inflate_state {\n\n    unsigned char FAR\s
* The error was at line 19, column 23, and at character 0x002a '*', ...
* here: *window;\n\n    unsigned ncode;\n    unsigned nlen
Marpa::R2 exception at /home/bicodul/perl5/lib/perl5/MarpaX/Languages/C/AST/Impl.pm line 73.

Last position:

At line 19, column 19

    unsigned char FAR *window;
------------------^
2016/10/28 00:29:39 FATAL   5668 Error in SLIF parse: No lexeme found at line 20, column 40
* String before error: detype;\n\nextern int inflate_table9 OF((codetype\s
* The error was at line 20, column 40, and at character 0x0074 't', ...
* here: type, unsigned short FAR *lens,\n\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s
Marpa::R2 exception at /home/bicodul/perl5/lib/perl5/MarpaX/Languages/C/AST/Impl.pm line 73.

Last position:

At line 20, column 31

extern int inflate_table9 OF((codetype type, unsigned short FAR *lens,
------------------------------^
2016/10/28 00:29:41 FATAL   5673 Error in SLIF parse: No lexeme found at line 20, column 36
* String before error: } codetype;\n\nint ZLIB_INTERNAL inflate_table OF(
* The error was at line 20, column 36, and at character 0x0028 '(', ...
* here: (codetype type, unsigned short FAR *lens,\n\s\s\s\s\s\s\s
Marpa::R2 exception at /home/bicodul/perl5/lib/perl5/MarpaX/Languages/C/AST/Impl.pm line 73.

Last position:

At line 20, column 35

int ZLIB_INTERNAL inflate_table OF((codetype type, unsigned short FAR *lens,
----------------------------------^

<fdecl type="voidpf" id="open_file_func" text="typedef voidpf ( *open_file_func) (voidpf opaque, const char* filename, int mode)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/ioapi.h">
  <args>
    <arg type="voidpf" id="opaque" text="voidpf opaque" mod=""/>
    <arg type="const char" id="filename" text="const char* filename" mod=""/>
    <arg type="int" id="mode" text="int mode" mod=""/>
  </args>
</fdecl>
<fdecl type="uLong" id="read_file_func" text="typedef uLong ( *read_file_func) (voidpf opaque, voidpf stream, void* buf, uLong size)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/ioapi.h">
  <args>
    <arg type="voidpf" id="opaque" text="voidpf opaque" mod=""/>
    <arg type="voidpf" id="stream" text="voidpf stream" mod=""/>
    <arg type="void" id="buf" text="void* buf" mod=""/>
    <arg type="uLong" id="size" text="uLong size" mod=""/>
  </args>
</fdecl>
<fdecl type="uLong" id="write_file_func" text="typedef uLong ( *write_file_func) (voidpf opaque, voidpf stream, const void* buf, uLong size)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/ioapi.h">
  <args>
    <arg type="voidpf" id="opaque" text="voidpf opaque" mod=""/>
    <arg type="voidpf" id="stream" text="voidpf stream" mod=""/>
    <arg type="const void" id="buf" text="const void* buf" mod=""/>
    <arg type="uLong" id="size" text="uLong size" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="close_file_func" text="typedef int ( *close_file_func) (voidpf opaque, voidpf stream)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/ioapi.h">
  <args>
    <arg type="voidpf" id="opaque" text="voidpf opaque" mod=""/>
    <arg type="voidpf" id="stream" text="voidpf stream" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="testerror_file_func" text="typedef int ( *testerror_file_func) (voidpf opaque, voidpf stream)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/ioapi.h">
  <args>
    <arg type="voidpf" id="opaque" text="voidpf opaque" mod=""/>
    <arg type="voidpf" id="stream" text="voidpf stream" mod=""/>
  </args>
</fdecl>
<fdecl type="long" id="tell_file_func" text="typedef long ( *tell_file_func) (voidpf opaque, voidpf stream)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/ioapi.h">
  <args>
    <arg type="voidpf" id="opaque" text="voidpf opaque" mod=""/>
    <arg type="voidpf" id="stream" text="voidpf stream" mod=""/>
  </args>
</fdecl>
<fdecl type="long" id="seek_file_func" text="typedef long ( *seek_file_func) (voidpf opaque, voidpf stream, uLong offset, int origin)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/ioapi.h">
  <args>
    <arg type="voidpf" id="opaque" text="voidpf opaque" mod=""/>
    <arg type="voidpf" id="stream" text="voidpf stream" mod=""/>
    <arg type="uLong" id="offset" text="uLong offset" mod=""/>
    <arg type="int" id="origin" text="int origin" mod=""/>
  </args>
</fdecl>
<fdecl type="ZPOS64_T" id="tell64_file_func" text="typedef ZPOS64_T ( *tell64_file_func) (voidpf opaque, voidpf stream)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/ioapi.h">
  <args>
    <arg type="voidpf" id="opaque" text="voidpf opaque" mod=""/>
    <arg type="voidpf" id="stream" text="voidpf stream" mod=""/>
  </args>
</fdecl>
<fdecl type="long" id="seek64_file_func" text="typedef long ( *seek64_file_func) (voidpf opaque, voidpf stream, ZPOS64_T offset, int origin)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/ioapi.h">
  <args>
    <arg type="voidpf" id="opaque" text="voidpf opaque" mod=""/>
    <arg type="voidpf" id="stream" text="voidpf stream" mod=""/>
    <arg type="ZPOS64_T" id="offset" text="ZPOS64_T offset" mod=""/>
    <arg type="int" id="origin" text="int origin" mod=""/>
  </args>
</fdecl>
<fdecl type="voidpf" id="open64_file_func" text="typedef voidpf ( *open64_file_func) (voidpf opaque, const void* filename, int mode)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/ioapi.h">
  <args>
    <arg type="voidpf" id="opaque" text="voidpf opaque" mod=""/>
    <arg type="const void" id="filename" text="const void* filename" mod=""/>
    <arg type="int" id="mode" text="int mode" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="fill_fopen64_filefunc" text="void fill_fopen64_filefunc (zlib_filefunc64_def* pzlib_filefunc_def)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/ioapi.h">
  <args>
    <arg type="zlib_filefunc64_def" id="pzlib_filefunc_def" text="zlib_filefunc64_def* pzlib_filefunc_def" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="fill_fopen_filefunc" text="void fill_fopen_filefunc (zlib_filefunc_def* pzlib_filefunc_def)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/ioapi.h">
  <args>
    <arg type="zlib_filefunc_def" id="pzlib_filefunc_def" text="zlib_filefunc_def* pzlib_filefunc_def" mod=""/>
  </args>
</fdecl>
<fdecl type="voidpf" id="call_zopen64" text="voidpf call_zopen64 (const zlib_filefunc64_32_def* pfilefunc,const void*filename,int mode)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/ioapi.h">
  <args>
    <arg type="const zlib_filefunc64_32_def" id="pfilefunc" text="const zlib_filefunc64_32_def* pfilefunc" mod=""/>
    <arg type="const void" id="filename" text="const void*filename" mod=""/>
    <arg type="int" id="mode" text="int mode" mod=""/>
  </args>
</fdecl>
<fdecl type="long" id="call_zseek64" text="long call_zseek64 (const zlib_filefunc64_32_def* pfilefunc,voidpf filestream, ZPOS64_T offset, int origin)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/ioapi.h">
  <args>
    <arg type="const zlib_filefunc64_32_def" id="pfilefunc" text="const zlib_filefunc64_32_def* pfilefunc" mod=""/>
    <arg type="voidpf" id="filestream" text="voidpf filestream" mod=""/>
    <arg type="ZPOS64_T" id="offset" text="ZPOS64_T offset" mod=""/>
    <arg type="int" id="origin" text="int origin" mod=""/>
  </args>
</fdecl>
<fdecl type="ZPOS64_T" id="call_ztell64" text="ZPOS64_T call_ztell64 (const zlib_filefunc64_32_def* pfilefunc,voidpf filestream)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/ioapi.h">
  <args>
    <arg type="const zlib_filefunc64_32_def" id="pfilefunc" text="const zlib_filefunc64_32_def* pfilefunc" mod=""/>
    <arg type="voidpf" id="filestream" text="voidpf filestream" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="fill_zlib_filefunc64_32_def_from_filefunc32" text="void fill_zlib_filefunc64_32_def_from_filefunc32(zlib_filefunc64_32_def* p_filefunc64_32,const zlib_filefunc_def* p_filefunc32)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/ioapi.h">
  <args>
    <arg type="zlib_filefunc64_32_def" id="p_filefunc64_32" text="zlib_filefunc64_32_def* p_filefunc64_32" mod=""/>
    <arg type="const zlib_filefunc_def" id="p_filefunc32" text="const zlib_filefunc_def* p_filefunc32" mod=""/>
  </args>
</fdecl>

<fdecl type="extern int" id="unzRepair" text="extern int unzRepair(const char* file,&#10;                             const char* fileOut,&#10;                             const char* fileOutTmp,&#10;                             uLong* nRecovered,&#10;                             uLong* bytesRecovered)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/mztools.h">
  <args>
    <arg type="const char" id="file" text="const char* file" mod=""/>
    <arg type="const char" id="fileOut" text="const char* fileOut" mod=""/>
    <arg type="const char" id="fileOutTmp" text="const char* fileOutTmp" mod=""/>
    <arg type="uLong" id="nRecovered" text="uLong* nRecovered" mod=""/>
    <arg type="uLong" id="bytesRecovered" text="uLong* bytesRecovered" mod=""/>
  </args>
</fdecl>

<fdecl type="int" id="puff" text="int puff(unsigned char *dest,&#10;         unsigned long *destlen,&#10;         const unsigned char *source,&#10;         unsigned long *sourcelen)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/puff.h">
  <args>
    <arg type="unsigned char" id="dest" text="unsigned char *dest" mod=""/>
    <arg type="unsigned long" id="destlen" text="unsigned long *destlen" mod=""/>
    <arg type="const unsigned char" id="source" text="const unsigned char *source" mod=""/>
    <arg type="unsigned long" id="sourcelen" text="unsigned long *sourcelen" mod=""/>
  </args>
</fdecl>
2016/10/28 00:31:04 FATAL   7146 Error in SLIF parse: No lexeme found at line 9, column 33
* String before error: ers/trees.h"\n\n\nlocal const ct_data static_ltree
* The error was at line 9, column 33, and at character 0x005b '[', ...
* here: [L_CODES+2] = {\n{{ 12},{ 8}}, {{140},{ 8}}, {{ 76
Marpa::R2 exception at /home/bicodul/perl5/lib/perl5/MarpaX/Languages/C/AST/Impl.pm line 73.

Last position:

At line 9, column 21

local const ct_data static_ltree[L_CODES+2] = {
--------------------^

<fdecl type="extern int" id="unzStringFileNameCompare" text="extern int unzStringFileNameCompare (const char* fileName1, const char* fileName2, int iCaseSensitivity)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="const char" id="fileName1" text="const char* fileName1" mod=""/>
    <arg type="const char" id="fileName2" text="const char* fileName2" mod=""/>
    <arg type="int" id="iCaseSensitivity" text="int iCaseSensitivity" mod=""/>
  </args>
</fdecl>
<fdecl type="extern unzFile" id="unzOpen" text="extern unzFile unzOpen (const char *path)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="const char" id="path" text="const char *path" mod=""/>
  </args>
</fdecl>
<fdecl type="extern unzFile" id="unzOpen64" text="extern unzFile unzOpen64 (const void *path)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="const void" id="path" text="const void *path" mod=""/>
  </args>
</fdecl>
<fdecl type="extern unzFile" id="unzOpen2" text="extern unzFile unzOpen2 (const char *path, zlib_filefunc_def* pzlib_filefunc_def)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="const char" id="path" text="const char *path" mod=""/>
    <arg type="zlib_filefunc_def" id="pzlib_filefunc_def" text="zlib_filefunc_def* pzlib_filefunc_def" mod=""/>
  </args>
</fdecl>
<fdecl type="extern unzFile" id="unzOpen2_64" text="extern unzFile unzOpen2_64 (const void *path, zlib_filefunc64_def* pzlib_filefunc_def)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="const void" id="path" text="const void *path" mod=""/>
    <arg type="zlib_filefunc64_def" id="pzlib_filefunc_def" text="zlib_filefunc64_def* pzlib_filefunc_def" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="unzClose" text="extern int unzClose (unzFile file)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="unzFile" id="file" text="unzFile file" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="unzGetGlobalInfo" text="extern int unzGetGlobalInfo (unzFile file, unz_global_info *pglobal_info)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="unzFile" id="file" text="unzFile file" mod=""/>
    <arg type="unz_global_info" id="pglobal_info" text="unz_global_info *pglobal_info" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="unzGetGlobalInfo64" text="extern int unzGetGlobalInfo64 (unzFile file, unz_global_info64 *pglobal_info)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="unzFile" id="file" text="unzFile file" mod=""/>
    <arg type="unz_global_info64" id="pglobal_info" text="unz_global_info64 *pglobal_info" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="unzGetGlobalComment" text="extern int unzGetGlobalComment (unzFile file, char *szComment, uLong uSizeBuf)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="unzFile" id="file" text="unzFile file" mod=""/>
    <arg type="char" id="szComment" text="char *szComment" mod=""/>
    <arg type="uLong" id="uSizeBuf" text="uLong uSizeBuf" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="unzGoToFirstFile" text="extern int unzGoToFirstFile (unzFile file)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="unzFile" id="file" text="unzFile file" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="unzGoToNextFile" text="extern int unzGoToNextFile (unzFile file)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="unzFile" id="file" text="unzFile file" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="unzLocateFile" text="extern int unzLocateFile (unzFile file, const char *szFileName, int iCaseSensitivity)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="unzFile" id="file" text="unzFile file" mod=""/>
    <arg type="const char" id="szFileName" text="const char *szFileName" mod=""/>
    <arg type="int" id="iCaseSensitivity" text="int iCaseSensitivity" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="unzGetFilePos" text="extern int unzGetFilePos(&#10;    unzFile file,&#10;    unz_file_pos* file_pos)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="unzFile" id="file" text="unzFile file" mod=""/>
    <arg type="unz_file_pos" id="file_pos" text="unz_file_pos* file_pos" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="unzGoToFilePos" text="extern int unzGoToFilePos(&#10;    unzFile file,&#10;    unz_file_pos* file_pos)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="unzFile" id="file" text="unzFile file" mod=""/>
    <arg type="unz_file_pos" id="file_pos" text="unz_file_pos* file_pos" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="unzGetFilePos64" text="extern int unzGetFilePos64(&#10;    unzFile file,&#10;    unz64_file_pos* file_pos)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="unzFile" id="file" text="unzFile file" mod=""/>
    <arg type="unz64_file_pos" id="file_pos" text="unz64_file_pos* file_pos" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="unzGoToFilePos64" text="extern int unzGoToFilePos64(&#10;    unzFile file,&#10;    const unz64_file_pos* file_pos)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="unzFile" id="file" text="unzFile file" mod=""/>
    <arg type="const unz64_file_pos" id="file_pos" text="const unz64_file_pos* file_pos" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="unzGetCurrentFileInfo64" text="extern int unzGetCurrentFileInfo64 (unzFile file, unz_file_info64 *pfile_info, char *szFileName, uLong fileNameBufferSize, void *extraField, uLong extraFieldBufferSize, char *szComment, uLong commentBufferSize)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="unzFile" id="file" text="unzFile file" mod=""/>
    <arg type="unz_file_info64" id="pfile_info" text="unz_file_info64 *pfile_info" mod=""/>
    <arg type="char" id="szFileName" text="char *szFileName" mod=""/>
    <arg type="uLong" id="fileNameBufferSize" text="uLong fileNameBufferSize" mod=""/>
    <arg type="void" id="extraField" text="void *extraField" mod=""/>
    <arg type="uLong" id="extraFieldBufferSize" text="uLong extraFieldBufferSize" mod=""/>
    <arg type="char" id="szComment" text="char *szComment" mod=""/>
    <arg type="uLong" id="commentBufferSize" text="uLong commentBufferSize" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="unzGetCurrentFileInfo" text="extern int unzGetCurrentFileInfo (unzFile file, unz_file_info *pfile_info, char *szFileName, uLong fileNameBufferSize, void *extraField, uLong extraFieldBufferSize, char *szComment, uLong commentBufferSize)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="unzFile" id="file" text="unzFile file" mod=""/>
    <arg type="unz_file_info" id="pfile_info" text="unz_file_info *pfile_info" mod=""/>
    <arg type="char" id="szFileName" text="char *szFileName" mod=""/>
    <arg type="uLong" id="fileNameBufferSize" text="uLong fileNameBufferSize" mod=""/>
    <arg type="void" id="extraField" text="void *extraField" mod=""/>
    <arg type="uLong" id="extraFieldBufferSize" text="uLong extraFieldBufferSize" mod=""/>
    <arg type="char" id="szComment" text="char *szComment" mod=""/>
    <arg type="uLong" id="commentBufferSize" text="uLong commentBufferSize" mod=""/>
  </args>
</fdecl>
<fdecl type="extern ZPOS64_T" id="unzGetCurrentFileZStreamPos64" text="extern ZPOS64_T unzGetCurrentFileZStreamPos64 (unzFile file)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="unzFile" id="file" text="unzFile file" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="unzOpenCurrentFile" text="extern int unzOpenCurrentFile (unzFile file)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="unzFile" id="file" text="unzFile file" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="unzOpenCurrentFilePassword" text="extern int unzOpenCurrentFilePassword (unzFile file, const char* password)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="unzFile" id="file" text="unzFile file" mod=""/>
    <arg type="const char" id="password" text="const char* password" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="unzOpenCurrentFile2" text="extern int unzOpenCurrentFile2 (unzFile file, int* method, int* level, int raw)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="unzFile" id="file" text="unzFile file" mod=""/>
    <arg type="int" id="method" text="int* method" mod=""/>
    <arg type="int" id="level" text="int* level" mod=""/>
    <arg type="int" id="raw" text="int raw" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="unzOpenCurrentFile3" text="extern int unzOpenCurrentFile3 (unzFile file, int* method, int* level, int raw, const char* password)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="unzFile" id="file" text="unzFile file" mod=""/>
    <arg type="int" id="method" text="int* method" mod=""/>
    <arg type="int" id="level" text="int* level" mod=""/>
    <arg type="int" id="raw" text="int raw" mod=""/>
    <arg type="const char" id="password" text="const char* password" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="unzCloseCurrentFile" text="extern int unzCloseCurrentFile (unzFile file)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="unzFile" id="file" text="unzFile file" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="unzReadCurrentFile" text="extern int unzReadCurrentFile (unzFile file, voidp buf, unsigned len)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="unzFile" id="file" text="unzFile file" mod=""/>
    <arg type="voidp" id="buf" text="voidp buf" mod=""/>
    <arg type="unsigned" id="len" text="unsigned len" mod=""/>
  </args>
</fdecl>
<fdecl type="extern off_t" id="unztell" text="extern off_t unztell (unzFile file)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="unzFile" id="file" text="unzFile file" mod=""/>
  </args>
</fdecl>
<fdecl type="extern ZPOS64_T" id="unztell64" text="extern ZPOS64_T unztell64 (unzFile file)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="unzFile" id="file" text="unzFile file" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="unzeof" text="extern int unzeof (unzFile file)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="unzFile" id="file" text="unzFile file" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="unzGetLocalExtrafield" text="extern int unzGetLocalExtrafield (unzFile file, voidp buf, unsigned len)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="unzFile" id="file" text="unzFile file" mod=""/>
    <arg type="voidp" id="buf" text="voidp buf" mod=""/>
    <arg type="unsigned" id="len" text="unsigned len" mod=""/>
  </args>
</fdecl>
<fdecl type="extern ZPOS64_T" id="unzGetOffset64" text="extern ZPOS64_T unzGetOffset64 (unzFile file)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="unzFile" id="file" text="unzFile file" mod=""/>
  </args>
</fdecl>
<fdecl type="extern uLong" id="unzGetOffset" text="extern uLong unzGetOffset (unzFile file)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="unzFile" id="file" text="unzFile file" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="unzSetOffset64" text="extern int unzSetOffset64 (unzFile file, ZPOS64_T pos)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="unzFile" id="file" text="unzFile file" mod=""/>
    <arg type="ZPOS64_T" id="pos" text="ZPOS64_T pos" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="unzSetOffset" text="extern int unzSetOffset (unzFile file, uLong pos)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/unzip.h">
  <args>
    <arg type="unzFile" id="file" text="unzFile file" mod=""/>
    <arg type="uLong" id="pos" text="uLong pos" mod=""/>
  </args>
</fdecl>



<fdecl type="extern zipFile" id="zipOpen" text="extern zipFile zipOpen (const char *pathname, int append)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zip.h">
  <args>
    <arg type="const char" id="pathname" text="const char *pathname" mod=""/>
    <arg type="int" id="append" text="int append" mod=""/>
  </args>
</fdecl>
<fdecl type="extern zipFile" id="zipOpen64" text="extern zipFile zipOpen64 (const void *pathname, int append)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zip.h">
  <args>
    <arg type="const void" id="pathname" text="const void *pathname" mod=""/>
    <arg type="int" id="append" text="int append" mod=""/>
  </args>
</fdecl>
<fdecl type="extern zipFile" id="zipOpen2" text="extern zipFile zipOpen2 (const char *pathname, int append, zipcharpc* globalcomment, zlib_filefunc_def* pzlib_filefunc_def)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zip.h">
  <args>
    <arg type="const char" id="pathname" text="const char *pathname" mod=""/>
    <arg type="int" id="append" text="int append" mod=""/>
    <arg type="zipcharpc" id="globalcomment" text="zipcharpc* globalcomment" mod=""/>
    <arg type="zlib_filefunc_def" id="pzlib_filefunc_def" text="zlib_filefunc_def* pzlib_filefunc_def" mod=""/>
  </args>
</fdecl>
<fdecl type="extern zipFile" id="zipOpen2_64" text="extern zipFile zipOpen2_64 (const void *pathname, int append, zipcharpc* globalcomment, zlib_filefunc64_def* pzlib_filefunc_def)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zip.h">
  <args>
    <arg type="const void" id="pathname" text="const void *pathname" mod=""/>
    <arg type="int" id="append" text="int append" mod=""/>
    <arg type="zipcharpc" id="globalcomment" text="zipcharpc* globalcomment" mod=""/>
    <arg type="zlib_filefunc64_def" id="pzlib_filefunc_def" text="zlib_filefunc64_def* pzlib_filefunc_def" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="zipOpenNewFileInZip" text="extern int zipOpenNewFileInZip (zipFile file, const char* filename, const zip_fileinfo* zipfi, const void* extrafield_local, uInt size_extrafield_local, const void* extrafield_global, uInt size_extrafield_global, const char* comment, int method, int level)&#10;# 156 &quot;../sujet1/bdd/zlib/zlib-1.2.8/headers/zip.h&quot;" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zip.h">
  <args>
    <arg type="zipFile" id="file" text="zipFile file" mod=""/>
    <arg type="const char" id="filename" text="const char* filename" mod=""/>
    <arg type="const zip_fileinfo" id="zipfi" text="const zip_fileinfo* zipfi" mod=""/>
    <arg type="const void" id="extrafield_local" text="const void* extrafield_local" mod=""/>
    <arg type="uInt" id="size_extrafield_local" text="uInt size_extrafield_local" mod=""/>
    <arg type="const void" id="extrafield_global" text="const void* extrafield_global" mod=""/>
    <arg type="uInt" id="size_extrafield_global" text="uInt size_extrafield_global" mod=""/>
    <arg type="const char" id="comment" text="const char* comment" mod=""/>
    <arg type="int" id="method" text="int method" mod=""/>
    <arg type="int" id="level" text="int level" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="zipOpenNewFileInZip64" text="extern int zipOpenNewFileInZip64 (zipFile file, const char* filename, const zip_fileinfo* zipfi, const void* extrafield_local, uInt size_extrafield_local, const void* extrafield_global, uInt size_extrafield_global, const char* comment, int method, int level, int zip64)&#10;# 168 &quot;../sujet1/bdd/zlib/zlib-1.2.8/headers/zip.h&quot;" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zip.h">
  <args>
    <arg type="zipFile" id="file" text="zipFile file" mod=""/>
    <arg type="const char" id="filename" text="const char* filename" mod=""/>
    <arg type="const zip_fileinfo" id="zipfi" text="const zip_fileinfo* zipfi" mod=""/>
    <arg type="const void" id="extrafield_local" text="const void* extrafield_local" mod=""/>
    <arg type="uInt" id="size_extrafield_local" text="uInt size_extrafield_local" mod=""/>
    <arg type="const void" id="extrafield_global" text="const void* extrafield_global" mod=""/>
    <arg type="uInt" id="size_extrafield_global" text="uInt size_extrafield_global" mod=""/>
    <arg type="const char" id="comment" text="const char* comment" mod=""/>
    <arg type="int" id="method" text="int method" mod=""/>
    <arg type="int" id="level" text="int level" mod=""/>
    <arg type="int" id="zip64" text="int zip64" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="zipOpenNewFileInZip2" text="extern int zipOpenNewFileInZip2 (zipFile file, const char* filename, const zip_fileinfo* zipfi, const void* extrafield_local, uInt size_extrafield_local, const void* extrafield_global, uInt size_extrafield_global, const char* comment, int method, int level, int raw)&#10;# 197 &quot;../sujet1/bdd/zlib/zlib-1.2.8/headers/zip.h&quot;" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zip.h">
  <args>
    <arg type="zipFile" id="file" text="zipFile file" mod=""/>
    <arg type="const char" id="filename" text="const char* filename" mod=""/>
    <arg type="const zip_fileinfo" id="zipfi" text="const zip_fileinfo* zipfi" mod=""/>
    <arg type="const void" id="extrafield_local" text="const void* extrafield_local" mod=""/>
    <arg type="uInt" id="size_extrafield_local" text="uInt size_extrafield_local" mod=""/>
    <arg type="const void" id="extrafield_global" text="const void* extrafield_global" mod=""/>
    <arg type="uInt" id="size_extrafield_global" text="uInt size_extrafield_global" mod=""/>
    <arg type="const char" id="comment" text="const char* comment" mod=""/>
    <arg type="int" id="method" text="int method" mod=""/>
    <arg type="int" id="level" text="int level" mod=""/>
    <arg type="int" id="raw" text="int raw" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="zipOpenNewFileInZip2_64" text="extern int zipOpenNewFileInZip2_64 (zipFile file, const char* filename, const zip_fileinfo* zipfi, const void* extrafield_local, uInt size_extrafield_local, const void* extrafield_global, uInt size_extrafield_global, const char* comment, int method, int level, int raw, int zip64)&#10;# 211 &quot;../sujet1/bdd/zlib/zlib-1.2.8/headers/zip.h&quot;" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zip.h">
  <args>
    <arg type="zipFile" id="file" text="zipFile file" mod=""/>
    <arg type="const char" id="filename" text="const char* filename" mod=""/>
    <arg type="const zip_fileinfo" id="zipfi" text="const zip_fileinfo* zipfi" mod=""/>
    <arg type="const void" id="extrafield_local" text="const void* extrafield_local" mod=""/>
    <arg type="uInt" id="size_extrafield_local" text="uInt size_extrafield_local" mod=""/>
    <arg type="const void" id="extrafield_global" text="const void* extrafield_global" mod=""/>
    <arg type="uInt" id="size_extrafield_global" text="uInt size_extrafield_global" mod=""/>
    <arg type="const char" id="comment" text="const char* comment" mod=""/>
    <arg type="int" id="method" text="int method" mod=""/>
    <arg type="int" id="level" text="int level" mod=""/>
    <arg type="int" id="raw" text="int raw" mod=""/>
    <arg type="int" id="zip64" text="int zip64" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="zipOpenNewFileInZip3" text="extern int zipOpenNewFileInZip3 (zipFile file, const char* filename, const zip_fileinfo* zipfi, const void* extrafield_local, uInt size_extrafield_local, const void* extrafield_global, uInt size_extrafield_global, const char* comment, int method, int level, int raw, int windowBits, int memLevel, int strategy, const char* password, uLong crcForCrypting)&#10;# 231 &quot;../sujet1/bdd/zlib/zlib-1.2.8/headers/zip.h&quot;" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zip.h">
  <args>
    <arg type="zipFile" id="file" text="zipFile file" mod=""/>
    <arg type="const char" id="filename" text="const char* filename" mod=""/>
    <arg type="const zip_fileinfo" id="zipfi" text="const zip_fileinfo* zipfi" mod=""/>
    <arg type="const void" id="extrafield_local" text="const void* extrafield_local" mod=""/>
    <arg type="uInt" id="size_extrafield_local" text="uInt size_extrafield_local" mod=""/>
    <arg type="const void" id="extrafield_global" text="const void* extrafield_global" mod=""/>
    <arg type="uInt" id="size_extrafield_global" text="uInt size_extrafield_global" mod=""/>
    <arg type="const char" id="comment" text="const char* comment" mod=""/>
    <arg type="int" id="method" text="int method" mod=""/>
    <arg type="int" id="level" text="int level" mod=""/>
    <arg type="int" id="raw" text="int raw" mod=""/>
    <arg type="int" id="windowBits" text="int windowBits" mod=""/>
    <arg type="int" id="memLevel" text="int memLevel" mod=""/>
    <arg type="int" id="strategy" text="int strategy" mod=""/>
    <arg type="const char" id="password" text="const char* password" mod=""/>
    <arg type="uLong" id="crcForCrypting" text="uLong crcForCrypting" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="zipOpenNewFileInZip3_64" text="extern int zipOpenNewFileInZip3_64 (zipFile file, const char* filename, const zip_fileinfo* zipfi, const void* extrafield_local, uInt size_extrafield_local, const void* extrafield_global, uInt size_extrafield_global, const char* comment, int method, int level, int raw, int windowBits, int memLevel, int strategy, const char* password, uLong crcForCrypting, int zip64 )&#10;# 250 &quot;../sujet1/bdd/zlib/zlib-1.2.8/headers/zip.h&quot;" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zip.h">
  <args>
    <arg type="zipFile" id="file" text="zipFile file" mod=""/>
    <arg type="const char" id="filename" text="const char* filename" mod=""/>
    <arg type="const zip_fileinfo" id="zipfi" text="const zip_fileinfo* zipfi" mod=""/>
    <arg type="const void" id="extrafield_local" text="const void* extrafield_local" mod=""/>
    <arg type="uInt" id="size_extrafield_local" text="uInt size_extrafield_local" mod=""/>
    <arg type="const void" id="extrafield_global" text="const void* extrafield_global" mod=""/>
    <arg type="uInt" id="size_extrafield_global" text="uInt size_extrafield_global" mod=""/>
    <arg type="const char" id="comment" text="const char* comment" mod=""/>
    <arg type="int" id="method" text="int method" mod=""/>
    <arg type="int" id="level" text="int level" mod=""/>
    <arg type="int" id="raw" text="int raw" mod=""/>
    <arg type="int" id="windowBits" text="int windowBits" mod=""/>
    <arg type="int" id="memLevel" text="int memLevel" mod=""/>
    <arg type="int" id="strategy" text="int strategy" mod=""/>
    <arg type="const char" id="password" text="const char* password" mod=""/>
    <arg type="uLong" id="crcForCrypting" text="uLong crcForCrypting" mod=""/>
    <arg type="int" id="zip64" text="int zip64" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="zipOpenNewFileInZip4" text="extern int zipOpenNewFileInZip4 (zipFile file, const char* filename, const zip_fileinfo* zipfi, const void* extrafield_local, uInt size_extrafield_local, const void* extrafield_global, uInt size_extrafield_global, const char* comment, int method, int level, int raw, int windowBits, int memLevel, int strategy, const char* password, uLong crcForCrypting, uLong versionMadeBy, uLong flagBase )&#10;# 277 &quot;../sujet1/bdd/zlib/zlib-1.2.8/headers/zip.h&quot;" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zip.h">
  <args>
    <arg type="zipFile" id="file" text="zipFile file" mod=""/>
    <arg type="const char" id="filename" text="const char* filename" mod=""/>
    <arg type="const zip_fileinfo" id="zipfi" text="const zip_fileinfo* zipfi" mod=""/>
    <arg type="const void" id="extrafield_local" text="const void* extrafield_local" mod=""/>
    <arg type="uInt" id="size_extrafield_local" text="uInt size_extrafield_local" mod=""/>
    <arg type="const void" id="extrafield_global" text="const void* extrafield_global" mod=""/>
    <arg type="uInt" id="size_extrafield_global" text="uInt size_extrafield_global" mod=""/>
    <arg type="const char" id="comment" text="const char* comment" mod=""/>
    <arg type="int" id="method" text="int method" mod=""/>
    <arg type="int" id="level" text="int level" mod=""/>
    <arg type="int" id="raw" text="int raw" mod=""/>
    <arg type="int" id="windowBits" text="int windowBits" mod=""/>
    <arg type="int" id="memLevel" text="int memLevel" mod=""/>
    <arg type="int" id="strategy" text="int strategy" mod=""/>
    <arg type="const char" id="password" text="const char* password" mod=""/>
    <arg type="uLong" id="crcForCrypting" text="uLong crcForCrypting" mod=""/>
    <arg type="uLong" id="versionMadeBy" text="uLong versionMadeBy" mod=""/>
    <arg type="uLong" id="flagBase" text="uLong flagBase" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="zipOpenNewFileInZip4_64" text="extern int zipOpenNewFileInZip4_64 (zipFile file, const char* filename, const zip_fileinfo* zipfi, const void* extrafield_local, uInt size_extrafield_local, const void* extrafield_global, uInt size_extrafield_global, const char* comment, int method, int level, int raw, int windowBits, int memLevel, int strategy, const char* password, uLong crcForCrypting, uLong versionMadeBy, uLong flagBase, int zip64 )&#10;# 299 &quot;../sujet1/bdd/zlib/zlib-1.2.8/headers/zip.h&quot;" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zip.h">
  <args>
    <arg type="zipFile" id="file" text="zipFile file" mod=""/>
    <arg type="const char" id="filename" text="const char* filename" mod=""/>
    <arg type="const zip_fileinfo" id="zipfi" text="const zip_fileinfo* zipfi" mod=""/>
    <arg type="const void" id="extrafield_local" text="const void* extrafield_local" mod=""/>
    <arg type="uInt" id="size_extrafield_local" text="uInt size_extrafield_local" mod=""/>
    <arg type="const void" id="extrafield_global" text="const void* extrafield_global" mod=""/>
    <arg type="uInt" id="size_extrafield_global" text="uInt size_extrafield_global" mod=""/>
    <arg type="const char" id="comment" text="const char* comment" mod=""/>
    <arg type="int" id="method" text="int method" mod=""/>
    <arg type="int" id="level" text="int level" mod=""/>
    <arg type="int" id="raw" text="int raw" mod=""/>
    <arg type="int" id="windowBits" text="int windowBits" mod=""/>
    <arg type="int" id="memLevel" text="int memLevel" mod=""/>
    <arg type="int" id="strategy" text="int strategy" mod=""/>
    <arg type="const char" id="password" text="const char* password" mod=""/>
    <arg type="uLong" id="crcForCrypting" text="uLong crcForCrypting" mod=""/>
    <arg type="uLong" id="versionMadeBy" text="uLong versionMadeBy" mod=""/>
    <arg type="uLong" id="flagBase" text="uLong flagBase" mod=""/>
    <arg type="int" id="zip64" text="int zip64" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="zipWriteInFileInZip" text="extern int zipWriteInFileInZip (zipFile file, const void* buf, unsigned len)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zip.h">
  <args>
    <arg type="zipFile" id="file" text="zipFile file" mod=""/>
    <arg type="const void" id="buf" text="const void* buf" mod=""/>
    <arg type="unsigned" id="len" text="unsigned len" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="zipCloseFileInZip" text="extern int zipCloseFileInZip (zipFile file)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zip.h">
  <args>
    <arg type="zipFile" id="file" text="zipFile file" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="zipCloseFileInZipRaw" text="extern int zipCloseFileInZipRaw (zipFile file, uLong uncompressed_size, uLong crc32)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zip.h">
  <args>
    <arg type="zipFile" id="file" text="zipFile file" mod=""/>
    <arg type="uLong" id="uncompressed_size" text="uLong uncompressed_size" mod=""/>
    <arg type="uLong" id="crc32" text="uLong crc32" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="zipCloseFileInZipRaw64" text="extern int zipCloseFileInZipRaw64 (zipFile file, ZPOS64_T uncompressed_size, uLong crc32)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zip.h">
  <args>
    <arg type="zipFile" id="file" text="zipFile file" mod=""/>
    <arg type="ZPOS64_T" id="uncompressed_size" text="ZPOS64_T uncompressed_size" mod=""/>
    <arg type="uLong" id="crc32" text="uLong crc32" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="zipClose" text="extern int zipClose (zipFile file, const char* global_comment)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zip.h">
  <args>
    <arg type="zipFile" id="file" text="zipFile file" mod=""/>
    <arg type="const char" id="global_comment" text="const char* global_comment" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="zipRemoveExtraInfoBlock" text="extern int zipRemoveExtraInfoBlock (char* pData, int* dataLen, short sHeader)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zip.h">
  <args>
    <arg type="char" id="pData" text="char* pData" mod=""/>
    <arg type="int" id="dataLen" text="int* dataLen" mod=""/>
    <arg type="short" id="sHeader" text="short sHeader" mod=""/>
  </args>
</fdecl>

<fdecl type="voidpf" id="alloc_func" text="typedef voidpf (*alloc_func) (voidpf opaque, uInt items, uInt size)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="voidpf" id="opaque" text="voidpf opaque" mod=""/>
    <arg type="uInt" id="items" text="uInt items" mod=""/>
    <arg type="uInt" id="size" text="uInt size" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="free_func" text="typedef void (*free_func) (voidpf opaque, voidpf address)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="voidpf" id="opaque" text="voidpf opaque" mod=""/>
    <arg type="voidpf" id="address" text="voidpf address" mod=""/>
  </args>
</fdecl>
<fdecl type="extern const char" id="zlibVersion" text="extern const char * zlibVersion (void)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="void" id="ANON0" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="deflate" text="extern int deflate (z_streamp strm, int flush)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="z_streamp" id="strm" text="z_streamp strm" mod=""/>
    <arg type="int" id="flush" text="int flush" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="deflateEnd" text="extern int deflateEnd (z_streamp strm)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="z_streamp" id="strm" text="z_streamp strm" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="inflate" text="extern int inflate (z_streamp strm, int flush)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="z_streamp" id="strm" text="z_streamp strm" mod=""/>
    <arg type="int" id="flush" text="int flush" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="inflateEnd" text="extern int inflateEnd (z_streamp strm)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="z_streamp" id="strm" text="z_streamp strm" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="deflateSetDictionary" text="extern int deflateSetDictionary (z_streamp strm, const Bytef *dictionary, uInt dictLength)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="z_streamp" id="strm" text="z_streamp strm" mod=""/>
    <arg type="const Bytef" id="dictionary" text="const Bytef *dictionary" mod=""/>
    <arg type="uInt" id="dictLength" text="uInt dictLength" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="deflateCopy" text="extern int deflateCopy (z_streamp dest, z_streamp source)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="z_streamp" id="dest" text="z_streamp dest" mod=""/>
    <arg type="z_streamp" id="source" text="z_streamp source" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="deflateReset" text="extern int deflateReset (z_streamp strm)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="z_streamp" id="strm" text="z_streamp strm" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="deflateParams" text="extern int deflateParams (z_streamp strm, int level, int strategy)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="z_streamp" id="strm" text="z_streamp strm" mod=""/>
    <arg type="int" id="level" text="int level" mod=""/>
    <arg type="int" id="strategy" text="int strategy" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="deflateTune" text="extern int deflateTune (z_streamp strm, int good_length, int max_lazy, int nice_length, int max_chain)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="z_streamp" id="strm" text="z_streamp strm" mod=""/>
    <arg type="int" id="good_length" text="int good_length" mod=""/>
    <arg type="int" id="max_lazy" text="int max_lazy" mod=""/>
    <arg type="int" id="nice_length" text="int nice_length" mod=""/>
    <arg type="int" id="max_chain" text="int max_chain" mod=""/>
  </args>
</fdecl>
<fdecl type="extern uLong" id="deflateBound" text="extern uLong deflateBound (z_streamp strm, uLong sourceLen)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="z_streamp" id="strm" text="z_streamp strm" mod=""/>
    <arg type="uLong" id="sourceLen" text="uLong sourceLen" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="deflatePending" text="extern int deflatePending (z_streamp strm, unsigned *pending, int *bits)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="z_streamp" id="strm" text="z_streamp strm" mod=""/>
    <arg type="unsigned" id="pending" text="unsigned *pending" mod=""/>
    <arg type="int" id="bits" text="int *bits" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="deflatePrime" text="extern int deflatePrime (z_streamp strm, int bits, int value)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="z_streamp" id="strm" text="z_streamp strm" mod=""/>
    <arg type="int" id="bits" text="int bits" mod=""/>
    <arg type="int" id="value" text="int value" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="deflateSetHeader" text="extern int deflateSetHeader (z_streamp strm, gz_headerp head)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="z_streamp" id="strm" text="z_streamp strm" mod=""/>
    <arg type="gz_headerp" id="head" text="gz_headerp head" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="inflateSetDictionary" text="extern int inflateSetDictionary (z_streamp strm, const Bytef *dictionary, uInt dictLength)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="z_streamp" id="strm" text="z_streamp strm" mod=""/>
    <arg type="const Bytef" id="dictionary" text="const Bytef *dictionary" mod=""/>
    <arg type="uInt" id="dictLength" text="uInt dictLength" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="inflateGetDictionary" text="extern int inflateGetDictionary (z_streamp strm, Bytef *dictionary, uInt *dictLength)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="z_streamp" id="strm" text="z_streamp strm" mod=""/>
    <arg type="Bytef" id="dictionary" text="Bytef *dictionary" mod=""/>
    <arg type="uInt" id="dictLength" text="uInt *dictLength" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="inflateSync" text="extern int inflateSync (z_streamp strm)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="z_streamp" id="strm" text="z_streamp strm" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="inflateCopy" text="extern int inflateCopy (z_streamp dest, z_streamp source)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="z_streamp" id="dest" text="z_streamp dest" mod=""/>
    <arg type="z_streamp" id="source" text="z_streamp source" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="inflateReset" text="extern int inflateReset (z_streamp strm)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="z_streamp" id="strm" text="z_streamp strm" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="inflateReset2" text="extern int inflateReset2 (z_streamp strm, int windowBits)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="z_streamp" id="strm" text="z_streamp strm" mod=""/>
    <arg type="int" id="windowBits" text="int windowBits" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="inflatePrime" text="extern int inflatePrime (z_streamp strm, int bits, int value)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="z_streamp" id="strm" text="z_streamp strm" mod=""/>
    <arg type="int" id="bits" text="int bits" mod=""/>
    <arg type="int" id="value" text="int value" mod=""/>
  </args>
</fdecl>
<fdecl type="extern long" id="inflateMark" text="extern long inflateMark (z_streamp strm)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="z_streamp" id="strm" text="z_streamp strm" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="inflateGetHeader" text="extern int inflateGetHeader (z_streamp strm, gz_headerp head)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="z_streamp" id="strm" text="z_streamp strm" mod=""/>
    <arg type="gz_headerp" id="head" text="gz_headerp head" mod=""/>
  </args>
</fdecl>
<fdecl type="unsigned" id="in_func" text="typedef unsigned (*in_func) (void *, unsigned char * *)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="void" id="ANON1" text="void *" mod=""/>
    <arg type="unsigned char" id="ANON2" text="unsigned char * *" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="out_func" text="typedef int (*out_func) (void *, unsigned char *, unsigned)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="void" id="ANON3" text="void *" mod=""/>
    <arg type="unsigned char" id="ANON4" text="unsigned char *" mod=""/>
    <arg type="unsigned" id="ANON5" text="unsigned" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="inflateBack" text="extern int inflateBack (z_streamp strm, in_func in, void *in_desc, out_func out, void *out_desc)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="z_streamp" id="strm" text="z_streamp strm" mod=""/>
    <arg type="in_func" id="in" text="in_func in" mod=""/>
    <arg type="void" id="in_desc" text="void *in_desc" mod=""/>
    <arg type="out_func" id="out" text="out_func out" mod=""/>
    <arg type="void" id="out_desc" text="void *out_desc" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="inflateBackEnd" text="extern int inflateBackEnd (z_streamp strm)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="z_streamp" id="strm" text="z_streamp strm" mod=""/>
  </args>
</fdecl>
<fdecl type="extern uLong" id="zlibCompileFlags" text="extern uLong zlibCompileFlags (void)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="void" id="ANON6" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="compress" text="extern int compress (Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="Bytef" id="dest" text="Bytef *dest" mod=""/>
    <arg type="uLongf" id="destLen" text="uLongf *destLen" mod=""/>
    <arg type="const Bytef" id="source" text="const Bytef *source" mod=""/>
    <arg type="uLong" id="sourceLen" text="uLong sourceLen" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="compress2" text="extern int compress2 (Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen, int level)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="Bytef" id="dest" text="Bytef *dest" mod=""/>
    <arg type="uLongf" id="destLen" text="uLongf *destLen" mod=""/>
    <arg type="const Bytef" id="source" text="const Bytef *source" mod=""/>
    <arg type="uLong" id="sourceLen" text="uLong sourceLen" mod=""/>
    <arg type="int" id="level" text="int level" mod=""/>
  </args>
</fdecl>
<fdecl type="extern uLong" id="compressBound" text="extern uLong compressBound (uLong sourceLen)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="uLong" id="sourceLen" text="uLong sourceLen" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="uncompress" text="extern int uncompress (Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="Bytef" id="dest" text="Bytef *dest" mod=""/>
    <arg type="uLongf" id="destLen" text="uLongf *destLen" mod=""/>
    <arg type="const Bytef" id="source" text="const Bytef *source" mod=""/>
    <arg type="uLong" id="sourceLen" text="uLong sourceLen" mod=""/>
  </args>
</fdecl>
<fdecl type="extern gzFile" id="gzdopen" text="extern gzFile gzdopen (int fd, const char *mode)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="int" id="fd" text="int fd" mod=""/>
    <arg type="const char" id="mode" text="const char *mode" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="gzbuffer" text="extern int gzbuffer (gzFile file, unsigned size)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="gzFile" id="file" text="gzFile file" mod=""/>
    <arg type="unsigned" id="size" text="unsigned size" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="gzsetparams" text="extern int gzsetparams (gzFile file, int level, int strategy)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="gzFile" id="file" text="gzFile file" mod=""/>
    <arg type="int" id="level" text="int level" mod=""/>
    <arg type="int" id="strategy" text="int strategy" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="gzread" text="extern int gzread (gzFile file, voidp buf, unsigned len)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="gzFile" id="file" text="gzFile file" mod=""/>
    <arg type="voidp" id="buf" text="voidp buf" mod=""/>
    <arg type="unsigned" id="len" text="unsigned len" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="gzwrite" text="extern int gzwrite (gzFile file, voidpc buf, unsigned len)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="gzFile" id="file" text="gzFile file" mod=""/>
    <arg type="voidpc" id="buf" text="voidpc buf" mod=""/>
    <arg type="unsigned" id="len" text="unsigned len" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="gzprintf" text="extern int gzprintf (gzFile file, const char *format, ...)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="gzFile" id="file" text="gzFile file" mod=""/>
    <arg type="const char" id="format" text="const char *format" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="gzputs" text="extern int gzputs (gzFile file, const char *s)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="gzFile" id="file" text="gzFile file" mod=""/>
    <arg type="const char" id="s" text="const char *s" mod=""/>
  </args>
</fdecl>
<fdecl type="extern char" id="gzgets" text="extern char * gzgets (gzFile file, char *buf, int len)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="gzFile" id="file" text="gzFile file" mod=""/>
    <arg type="char" id="buf" text="char *buf" mod=""/>
    <arg type="int" id="len" text="int len" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="gzputc" text="extern int gzputc (gzFile file, int c)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="gzFile" id="file" text="gzFile file" mod=""/>
    <arg type="int" id="c" text="int c" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="gzgetc" text="extern int gzgetc (gzFile file)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="gzFile" id="file" text="gzFile file" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="gzungetc" text="extern int gzungetc (int c, gzFile file)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="int" id="c" text="int c" mod=""/>
    <arg type="gzFile" id="file" text="gzFile file" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="gzflush" text="extern int gzflush (gzFile file, int flush)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="gzFile" id="file" text="gzFile file" mod=""/>
    <arg type="int" id="flush" text="int flush" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="gzrewind" text="extern int gzrewind (gzFile file)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="gzFile" id="file" text="gzFile file" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="gzeof" text="extern int gzeof (gzFile file)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="gzFile" id="file" text="gzFile file" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="gzdirect" text="extern int gzdirect (gzFile file)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="gzFile" id="file" text="gzFile file" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="gzclose" text="extern int gzclose (gzFile file)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="gzFile" id="file" text="gzFile file" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="gzclose_r" text="extern int gzclose_r (gzFile file)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="gzFile" id="file" text="gzFile file" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="gzclose_w" text="extern int gzclose_w (gzFile file)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="gzFile" id="file" text="gzFile file" mod=""/>
  </args>
</fdecl>
<fdecl type="extern const char" id="gzerror" text="extern const char * gzerror (gzFile file, int *errnum)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="gzFile" id="file" text="gzFile file" mod=""/>
    <arg type="int" id="errnum" text="int *errnum" mod=""/>
  </args>
</fdecl>
<fdecl type="extern void" id="gzclearerr" text="extern void gzclearerr (gzFile file)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="gzFile" id="file" text="gzFile file" mod=""/>
  </args>
</fdecl>
<fdecl type="extern uLong" id="adler32" text="extern uLong adler32 (uLong adler, const Bytef *buf, uInt len)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="uLong" id="adler" text="uLong adler" mod=""/>
    <arg type="const Bytef" id="buf" text="const Bytef *buf" mod=""/>
    <arg type="uInt" id="len" text="uInt len" mod=""/>
  </args>
</fdecl>
<fdecl type="extern uLong" id="crc32" text="extern uLong crc32 (uLong crc, const Bytef *buf, uInt len)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="uLong" id="crc" text="uLong crc" mod=""/>
    <arg type="const Bytef" id="buf" text="const Bytef *buf" mod=""/>
    <arg type="uInt" id="len" text="uInt len" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="deflateInit_" text="extern int deflateInit_ (z_streamp strm, int level, const char *version, int stream_size)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="z_streamp" id="strm" text="z_streamp strm" mod=""/>
    <arg type="int" id="level" text="int level" mod=""/>
    <arg type="const char" id="version" text="const char *version" mod=""/>
    <arg type="int" id="stream_size" text="int stream_size" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="inflateInit_" text="extern int inflateInit_ (z_streamp strm, const char *version, int stream_size)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="z_streamp" id="strm" text="z_streamp strm" mod=""/>
    <arg type="const char" id="version" text="const char *version" mod=""/>
    <arg type="int" id="stream_size" text="int stream_size" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="deflateInit2_" text="extern int deflateInit2_ (z_streamp strm, int level, int method, int windowBits, int memLevel, int strategy, const char *version, int stream_size)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="z_streamp" id="strm" text="z_streamp strm" mod=""/>
    <arg type="int" id="level" text="int level" mod=""/>
    <arg type="int" id="method" text="int method" mod=""/>
    <arg type="int" id="windowBits" text="int windowBits" mod=""/>
    <arg type="int" id="memLevel" text="int memLevel" mod=""/>
    <arg type="int" id="strategy" text="int strategy" mod=""/>
    <arg type="const char" id="version" text="const char *version" mod=""/>
    <arg type="int" id="stream_size" text="int stream_size" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="inflateInit2_" text="extern int inflateInit2_ (z_streamp strm, int windowBits, const char *version, int stream_size)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="z_streamp" id="strm" text="z_streamp strm" mod=""/>
    <arg type="int" id="windowBits" text="int windowBits" mod=""/>
    <arg type="const char" id="version" text="const char *version" mod=""/>
    <arg type="int" id="stream_size" text="int stream_size" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="inflateBackInit_" text="extern int inflateBackInit_ (z_streamp strm, int windowBits, unsigned char *window, const char *version, int stream_size)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="z_streamp" id="strm" text="z_streamp strm" mod=""/>
    <arg type="int" id="windowBits" text="int windowBits" mod=""/>
    <arg type="unsigned char" id="window" text="unsigned char *window" mod=""/>
    <arg type="const char" id="version" text="const char *version" mod=""/>
    <arg type="int" id="stream_size" text="int stream_size" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="gzgetc_" text="extern int gzgetc_ (gzFile file)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="gzFile" id="file" text="gzFile file" mod=""/>
  </args>
</fdecl>
<fdecl type="extern gzFile" id="gzopen64" text="extern gzFile gzopen64 (const char *, const char *)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="const char" id="ANON7" text="const char *" mod=""/>
    <arg type="const char" id="ANON8" text="const char *" mod=""/>
  </args>
</fdecl>
<fdecl type="extern off64_t" id="gzseek64" text="extern off64_t gzseek64 (gzFile, off64_t, int)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="gzFile" id="ANON9" text="gzFile" mod=""/>
    <arg type="off64_t" id="ANON10" text="off64_t" mod=""/>
    <arg type="int" id="ANON11" text="int" mod=""/>
  </args>
</fdecl>
<fdecl type="extern off64_t" id="gztell64" text="extern off64_t gztell64 (gzFile)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args/>
</fdecl>
<fdecl type="extern off64_t" id="gzoffset64" text="extern off64_t gzoffset64 (gzFile)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args/>
</fdecl>
<fdecl type="extern uLong" id="adler32_combine64" text="extern uLong adler32_combine64 (uLong, uLong, off64_t)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args/>
</fdecl>
<fdecl type="extern uLong" id="crc32_combine64" text="extern uLong crc32_combine64 (uLong, uLong, off64_t)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args/>
</fdecl>
<fdecl type="extern gzFile" id="gzopen" text="extern gzFile gzopen (const char *, const char *)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="const char" id="ANON12" text="const char *" mod=""/>
    <arg type="const char" id="ANON13" text="const char *" mod=""/>
  </args>
</fdecl>
<fdecl type="extern off_t" id="gzseek" text="extern off_t gzseek (gzFile, off_t, int)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="gzFile" id="ANON14" text="gzFile" mod=""/>
    <arg type="off_t" id="ANON15" text="off_t" mod=""/>
    <arg type="int" id="ANON16" text="int" mod=""/>
  </args>
</fdecl>
<fdecl type="extern off_t" id="gztell" text="extern off_t gztell (gzFile)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args/>
</fdecl>
<fdecl type="extern off_t" id="gzoffset" text="extern off_t gzoffset (gzFile)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args/>
</fdecl>
<fdecl type="extern uLong" id="adler32_combine" text="extern uLong adler32_combine (uLong, uLong, off_t)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args/>
</fdecl>
<fdecl type="extern uLong" id="crc32_combine" text="extern uLong crc32_combine (uLong, uLong, off_t)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args/>
</fdecl>
<fdecl type="extern const char" id="zError" text="extern const char * zError (int)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="int" id="ANON17" text="int" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="inflateSyncPoint" text="extern int inflateSyncPoint (z_streamp)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args/>
</fdecl>
<fdecl type="extern const z_crc_t" id="get_crc_table" text="extern const z_crc_t * get_crc_table (void)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="void" id="ANON18" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="inflateUndermine" text="extern int inflateUndermine (z_streamp, int)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="z_streamp" id="ANON19" text="z_streamp" mod=""/>
    <arg type="int" id="ANON20" text="int" mod=""/>
  </args>
</fdecl>
<fdecl type="extern int" id="inflateResetKeep" text="extern int inflateResetKeep (z_streamp)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args/>
</fdecl>
<fdecl type="extern int" id="deflateResetKeep" text="extern int deflateResetKeep (z_streamp)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args/>
</fdecl>
<fdecl type="extern int" id="gzvprintf" text="extern int gzvprintf (gzFile file, const char *format, va_list va)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zlib.h">
  <args>
    <arg type="gzFile" id="file" text="gzFile file" mod=""/>
    <arg type="const char" id="format" text="const char *format" mod=""/>
    <arg type="va_list" id="va" text="va_list va" mod=""/>
  </args>
</fdecl>


<fdecl type="voidpf" id="zcalloc" text="voidpf zcalloc (voidpf opaque, unsigned items, unsigned size)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zutil.h">
  <args>
    <arg type="voidpf" id="opaque" text="voidpf opaque" mod=""/>
    <arg type="unsigned" id="items" text="unsigned items" mod=""/>
    <arg type="unsigned" id="size" text="unsigned size" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="zcfree" text="void zcfree (voidpf opaque, voidpf ptr)" file="../sujet1/bdd/zlib/zlib-1.2.8/headers/zutil.h">
  <args>
    <arg type="voidpf" id="opaque" text="voidpf opaque" mod=""/>
    <arg type="voidpf" id="ptr" text="voidpf ptr" mod=""/>
  </args>
</fdecl>
</root>
