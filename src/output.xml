<root>




<fdecl type="int" id="CRYPTO_mem_ctrl" text="int CRYPTO_mem_ctrl(int mode)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="int" id="mode" text="int mode" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_is_mem_check_on" text="int CRYPTO_is_mem_check_on(void)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="ANON0" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="const char" id="SSLeay_version" text="const char *SSLeay_version(int type)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="int" id="type" text="int type" mod=""/>
  </args>
</fdecl>
<fdecl type="unsigned long" id="SSLeay" text="unsigned long SSLeay(void)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="ANON1" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="OPENSSL_issetugid" text="int OPENSSL_issetugid(void)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="ANON2" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="const CRYPTO_EX_DATA_IMPL" id="CRYPTO_get_ex_data_implementation" text="const CRYPTO_EX_DATA_IMPL *CRYPTO_get_ex_data_implementation(void)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="ANON3" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_set_ex_data_implementation" text="int CRYPTO_set_ex_data_implementation(const CRYPTO_EX_DATA_IMPL *i)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="const CRYPTO_EX_DATA_IMPL" id="i" text="const CRYPTO_EX_DATA_IMPL *i" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_ex_data_new_class" text="int CRYPTO_ex_data_new_class(void)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="ANON4" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_get_ex_new_index" text="int CRYPTO_get_ex_new_index(int class_index, long argl, void *argp,&#10;                            CRYPTO_EX_new *new_func, CRYPTO_EX_dup *dup_func,&#10;                            CRYPTO_EX_free *free_func)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="int" id="class_index" text="int class_index" mod=""/>
    <arg type="long" id="argl" text="long argl" mod=""/>
    <arg type="void" id="argp" text="void *argp" mod=""/>
    <arg type="CRYPTO_EX_new" id="new_func" text="CRYPTO_EX_new *new_func" mod=""/>
    <arg type="CRYPTO_EX_dup" id="dup_func" text="CRYPTO_EX_dup *dup_func" mod=""/>
    <arg type="CRYPTO_EX_free" id="free_func" text="CRYPTO_EX_free *free_func" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_new_ex_data" text="int CRYPTO_new_ex_data(int class_index, void *obj, CRYPTO_EX_DATA *ad)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="int" id="class_index" text="int class_index" mod=""/>
    <arg type="void" id="obj" text="void *obj" mod=""/>
    <arg type="CRYPTO_EX_DATA" id="ad" text="CRYPTO_EX_DATA *ad" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_dup_ex_data" text="int CRYPTO_dup_ex_data(int class_index, CRYPTO_EX_DATA *to,&#10;                       CRYPTO_EX_DATA *from)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="int" id="class_index" text="int class_index" mod=""/>
    <arg type="CRYPTO_EX_DATA" id="to" text="CRYPTO_EX_DATA *to" mod=""/>
    <arg type="CRYPTO_EX_DATA" id="from" text="CRYPTO_EX_DATA *from" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_free_ex_data" text="void CRYPTO_free_ex_data(int class_index, void *obj, CRYPTO_EX_DATA *ad)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="int" id="class_index" text="int class_index" mod=""/>
    <arg type="void" id="obj" text="void *obj" mod=""/>
    <arg type="CRYPTO_EX_DATA" id="ad" text="CRYPTO_EX_DATA *ad" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_set_ex_data" text="int CRYPTO_set_ex_data(CRYPTO_EX_DATA *ad, int idx, void *val)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="CRYPTO_EX_DATA" id="ad" text="CRYPTO_EX_DATA *ad" mod=""/>
    <arg type="int" id="idx" text="int idx" mod=""/>
    <arg type="void" id="val" text="void *val" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_get_ex_data" text="void *CRYPTO_get_ex_data(const CRYPTO_EX_DATA *ad, int idx)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="const CRYPTO_EX_DATA" id="ad" text="const CRYPTO_EX_DATA *ad" mod=""/>
    <arg type="int" id="idx" text="int idx" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_cleanup_all_ex_data" text="void CRYPTO_cleanup_all_ex_data(void)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="ANON5" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_get_new_lockid" text="int CRYPTO_get_new_lockid(char *name)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="char" id="name" text="char *name" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_num_locks" text="int CRYPTO_num_locks(void)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="ANON6" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_lock" text="void CRYPTO_lock(int mode, int type, const char *file, int line)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="int" id="mode" text="int mode" mod=""/>
    <arg type="int" id="type" text="int type" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_set_locking_callback" text="void CRYPTO_set_locking_callback(void (*func) (int mode, int type,&#10;                                               const char *file, int line))" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="func" text="void (*func) (int mode, int type,&#10;                                               const char *file, int line)" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_get_locking_callback" text="void (*CRYPTO_get_locking_callback(void)) (int mode, int type,&#10;                                           const char *file, int line)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="ANON7" text="void" mod=""/>
    <arg type="int" id="mode" text="int mode" mod=""/>
    <arg type="int" id="type" text="int type" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_set_add_lock_callback" text="void CRYPTO_set_add_lock_callback(int (*func)&#10;                                   (int *num, int mount, int type,&#10;                                    const char *file, int line))" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="int" id="func" text="int (*func)&#10;                                   (int *num, int mount, int type,&#10;                                    const char *file, int line)" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_get_add_lock_callback" text="int (*CRYPTO_get_add_lock_callback(void)) (int *num, int mount, int type,&#10;                                           const char *file, int line)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="ANON8" text="void" mod=""/>
    <arg type="int" id="num" text="int *num" mod=""/>
    <arg type="int" id="mount" text="int mount" mod=""/>
    <arg type="int" id="type" text="int type" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_THREADID_set_numeric" text="void CRYPTO_THREADID_set_numeric(CRYPTO_THREADID *id, unsigned long val)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="CRYPTO_THREADID" id="id" text="CRYPTO_THREADID *id" mod=""/>
    <arg type="unsigned long" id="val" text="unsigned long val" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_THREADID_set_pointer" text="void CRYPTO_THREADID_set_pointer(CRYPTO_THREADID *id, void *ptr)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="CRYPTO_THREADID" id="id" text="CRYPTO_THREADID *id" mod=""/>
    <arg type="void" id="ptr" text="void *ptr" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_THREADID_set_callback" text="int CRYPTO_THREADID_set_callback(void (*threadid_func) (CRYPTO_THREADID *))" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="threadid_func" text="void (*threadid_func) (CRYPTO_THREADID *)" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_THREADID_get_callback" text="void (*CRYPTO_THREADID_get_callback(void)) (CRYPTO_THREADID *)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="ANON9" text="void" mod=""/>
    <arg type="CRYPTO_THREADID" id="ANON10" text="CRYPTO_THREADID *" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_THREADID_current" text="void CRYPTO_THREADID_current(CRYPTO_THREADID *id)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="CRYPTO_THREADID" id="id" text="CRYPTO_THREADID *id" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_THREADID_cmp" text="int CRYPTO_THREADID_cmp(const CRYPTO_THREADID *a, const CRYPTO_THREADID *b)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="const CRYPTO_THREADID" id="a" text="const CRYPTO_THREADID *a" mod=""/>
    <arg type="const CRYPTO_THREADID" id="b" text="const CRYPTO_THREADID *b" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_THREADID_cpy" text="void CRYPTO_THREADID_cpy(CRYPTO_THREADID *dest, const CRYPTO_THREADID *src)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="CRYPTO_THREADID" id="dest" text="CRYPTO_THREADID *dest" mod=""/>
    <arg type="const CRYPTO_THREADID" id="src" text="const CRYPTO_THREADID *src" mod=""/>
  </args>
</fdecl>
<fdecl type="unsigned long" id="CRYPTO_THREADID_hash" text="unsigned long CRYPTO_THREADID_hash(const CRYPTO_THREADID *id)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="const CRYPTO_THREADID" id="id" text="const CRYPTO_THREADID *id" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_set_id_callback" text="void CRYPTO_set_id_callback(unsigned long (*func) (void))" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="unsigned long" id="func" text="unsigned long (*func) (void)" mod=""/>
  </args>
</fdecl>
<fdecl type="unsigned long" id="CRYPTO_get_id_callback" text="unsigned long (*CRYPTO_get_id_callback(void)) (void)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="ANON11" text="void" mod=""/>
    <arg type="void" id="ANON12" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="unsigned long" id="CRYPTO_thread_id" text="unsigned long CRYPTO_thread_id(void)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="ANON13" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="const char" id="CRYPTO_get_lock_name" text="const char *CRYPTO_get_lock_name(int type)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="int" id="type" text="int type" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_add_lock" text="int CRYPTO_add_lock(int *pointer, int amount, int type, const char *file,&#10;                    int line)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="int" id="pointer" text="int *pointer" mod=""/>
    <arg type="int" id="amount" text="int amount" mod=""/>
    <arg type="int" id="type" text="int type" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_get_new_dynlockid" text="int CRYPTO_get_new_dynlockid(void)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="ANON14" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_destroy_dynlockid" text="void CRYPTO_destroy_dynlockid(int i)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="int" id="i" text="int i" mod=""/>
  </args>
</fdecl>
<fdecl type="struct CRYPTO_dynlock_value" id="CRYPTO_get_dynlock_value" text="struct CRYPTO_dynlock_value *CRYPTO_get_dynlock_value(int i)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="int" id="i" text="int i" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_set_dynlock_create_callback" text="void CRYPTO_set_dynlock_create_callback(struct CRYPTO_dynlock_value&#10;                                        *(*dyn_create_function) (const char&#10;                                                                 *file,&#10;                                                                 int line))" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="struct CRYPTO_dynlock_value" id="dyn_create_function" text="struct CRYPTO_dynlock_value&#10;                                        *(*dyn_create_function) (const char&#10;                                                                 *file,&#10;                                                                 int line)" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_set_dynlock_lock_callback" text="void CRYPTO_set_dynlock_lock_callback(void (*dyn_lock_function)&#10;                                       (int mode,&#10;                                        struct CRYPTO_dynlock_value *l,&#10;                                        const char *file, int line))" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="dyn_lock_function" text="void (*dyn_lock_function)&#10;                                       (int mode,&#10;                                        struct CRYPTO_dynlock_value *l,&#10;                                        const char *file, int line)" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_set_dynlock_destroy_callback" text="void CRYPTO_set_dynlock_destroy_callback(void (*dyn_destroy_function)&#10;                                          (struct CRYPTO_dynlock_value *l,&#10;                                           const char *file, int line))" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="dyn_destroy_function" text="void (*dyn_destroy_function)&#10;                                          (struct CRYPTO_dynlock_value *l,&#10;                                           const char *file, int line)" mod=""/>
  </args>
</fdecl>
<fdecl type="struct CRYPTO_dynlock_value" id="CRYPTO_get_dynlock_create_callback" text="struct CRYPTO_dynlock_value&#10;*(*CRYPTO_get_dynlock_create_callback(void)) (const char *file, int line)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="ANON15" text="void" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_get_dynlock_lock_callback" text="void (*CRYPTO_get_dynlock_lock_callback(void)) (int mode,&#10;                                                struct CRYPTO_dynlock_value&#10;                                                *l, const char *file,&#10;                                                int line)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="ANON16" text="void" mod=""/>
    <arg type="int" id="mode" text="int mode" mod=""/>
    <arg type="struct CRYPTO_dynlock_value" id="l" text="struct CRYPTO_dynlock_value&#10;                                                *l" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_get_dynlock_destroy_callback" text="void (*CRYPTO_get_dynlock_destroy_callback(void)) (struct CRYPTO_dynlock_value&#10;                                                   *l, const char *file,&#10;                                                   int line)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="ANON17" text="void" mod=""/>
    <arg type="struct CRYPTO_dynlock_value" id="l" text="struct CRYPTO_dynlock_value&#10;                                                   *l" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_set_mem_functions" text="int CRYPTO_set_mem_functions(void *(*m) (size_t), void *(*r) (void *, size_t),&#10;                             void (*f) (void *))" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="m" text="void *(*m) (size_t)" mod=""/>
    <arg type="void" id="r" text="void *(*r) (void *, size_t)" mod=""/>
    <arg type="void" id="f" text="void (*f) (void *)" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_set_locked_mem_functions" text="int CRYPTO_set_locked_mem_functions(void *(*m) (size_t),&#10;                                    void (*free_func) (void *))" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="m" text="void *(*m) (size_t)" mod=""/>
    <arg type="void" id="free_func" text="void (*free_func) (void *)" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_set_mem_ex_functions" text="int CRYPTO_set_mem_ex_functions(void *(*m) (size_t, const char *, int),&#10;                                void *(*r) (void *, size_t, const char *,&#10;                                            int), void (*f) (void *))" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="m" text="void *(*m) (size_t, const char *, int)" mod=""/>
    <arg type="void" id="r" text="void *(*r) (void *, size_t, const char *,&#10;                                            int)" mod=""/>
    <arg type="void" id="f" text="void (*f) (void *)" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_set_locked_mem_ex_functions" text="int CRYPTO_set_locked_mem_ex_functions(void *(*m) (size_t, const char *, int),&#10;                                       void (*free_func) (void *))" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="m" text="void *(*m) (size_t, const char *, int)" mod=""/>
    <arg type="void" id="free_func" text="void (*free_func) (void *)" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_set_mem_debug_functions" text="int CRYPTO_set_mem_debug_functions(void (*m)&#10;                                    (void *, int, const char *, int, int),&#10;                                   void (*r) (void *, void *, int,&#10;                                              const char *, int, int),&#10;                                   void (*f) (void *, int), void (*so) (long),&#10;                                   long (*go) (void))" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="m" text="void (*m)&#10;                                    (void *, int, const char *, int, int)" mod=""/>
    <arg type="void" id="r" text="void (*r) (void *, void *, int,&#10;                                              const char *, int, int)" mod=""/>
    <arg type="void" id="f" text="void (*f) (void *, int)" mod=""/>
    <arg type="void" id="so" text="void (*so) (long)" mod=""/>
    <arg type="long" id="go" text="long (*go) (void)" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_get_mem_functions" text="void CRYPTO_get_mem_functions(void *(**m) (size_t),&#10;                              void *(**r) (void *, size_t),&#10;                              void (**f) (void *))" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="m" text="void *(**m) (size_t)" mod=""/>
    <arg type="void" id="r" text="void *(**r) (void *, size_t)" mod=""/>
    <arg type="void" id="f" text="void (**f) (void *)" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_get_locked_mem_functions" text="void CRYPTO_get_locked_mem_functions(void *(**m) (size_t),&#10;                                     void (**f) (void *))" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="m" text="void *(**m) (size_t)" mod=""/>
    <arg type="void" id="f" text="void (**f) (void *)" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_get_mem_ex_functions" text="void CRYPTO_get_mem_ex_functions(void *(**m) (size_t, const char *, int),&#10;                                 void *(**r) (void *, size_t, const char *,&#10;                                              int), void (**f) (void *))" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="m" text="void *(**m) (size_t, const char *, int)" mod=""/>
    <arg type="void" id="r" text="void *(**r) (void *, size_t, const char *,&#10;                                              int)" mod=""/>
    <arg type="void" id="f" text="void (**f) (void *)" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_get_locked_mem_ex_functions" text="void CRYPTO_get_locked_mem_ex_functions(void&#10;                                        *(**m) (size_t, const char *, int),&#10;                                        void (**f) (void *))" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="m" text="void&#10;                                        *(**m) (size_t, const char *, int)" mod=""/>
    <arg type="void" id="f" text="void (**f) (void *)" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_get_mem_debug_functions" text="void CRYPTO_get_mem_debug_functions(void (**m)&#10;                                     (void *, int, const char *, int, int),&#10;                                    void (**r) (void *, void *, int,&#10;                                                const char *, int, int),&#10;                                    void (**f) (void *, int),&#10;                                    void (**so) (long), long (**go) (void))" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="m" text="void (**m)&#10;                                     (void *, int, const char *, int, int)" mod=""/>
    <arg type="void" id="r" text="void (**r) (void *, void *, int,&#10;                                                const char *, int, int)" mod=""/>
    <arg type="void" id="f" text="void (**f) (void *, int)" mod=""/>
    <arg type="void" id="so" text="void (**so) (long)" mod=""/>
    <arg type="long" id="go" text="long (**go) (void)" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_malloc_locked" text="void *CRYPTO_malloc_locked(int num, const char *file, int line)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="int" id="num" text="int num" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_free_locked" text="void CRYPTO_free_locked(void *ptr)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="ptr" text="void *ptr" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_malloc" text="void *CRYPTO_malloc(int num, const char *file, int line)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="int" id="num" text="int num" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
  </args>
</fdecl>
<fdecl type="char" id="CRYPTO_strdup" text="char *CRYPTO_strdup(const char *str, const char *file, int line)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="const char" id="str" text="const char *str" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_free" text="void CRYPTO_free(void *ptr)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="ptr" text="void *ptr" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_realloc" text="void *CRYPTO_realloc(void *addr, int num, const char *file, int line)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="addr" text="void *addr" mod=""/>
    <arg type="int" id="num" text="int num" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_realloc_clean" text="void *CRYPTO_realloc_clean(void *addr, int old_num, int num, const char *file,&#10;                           int line)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="addr" text="void *addr" mod=""/>
    <arg type="int" id="old_num" text="int old_num" mod=""/>
    <arg type="int" id="num" text="int num" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_remalloc" text="void *CRYPTO_remalloc(void *addr, int num, const char *file, int line)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="addr" text="void *addr" mod=""/>
    <arg type="int" id="num" text="int num" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="OPENSSL_cleanse" text="void OPENSSL_cleanse(void *ptr, size_t len)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="ptr" text="void *ptr" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_set_mem_debug_options" text="void CRYPTO_set_mem_debug_options(long bits)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="long" id="bits" text="long bits" mod=""/>
  </args>
</fdecl>
<fdecl type="long" id="CRYPTO_get_mem_debug_options" text="long CRYPTO_get_mem_debug_options(void)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="ANON18" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_push_info_" text="int CRYPTO_push_info_(const char *info, const char *file, int line)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="const char" id="info" text="const char *info" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_pop_info" text="int CRYPTO_pop_info(void)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="ANON19" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_remove_all_info" text="int CRYPTO_remove_all_info(void)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="ANON20" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_dbg_malloc" text="void CRYPTO_dbg_malloc(void *addr, int num, const char *file, int line,&#10;                       int before_p)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="addr" text="void *addr" mod=""/>
    <arg type="int" id="num" text="int num" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
    <arg type="int" id="before_p" text="int before_p" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_dbg_realloc" text="void CRYPTO_dbg_realloc(void *addr1, void *addr2, int num, const char *file,&#10;                        int line, int before_p)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="addr1" text="void *addr1" mod=""/>
    <arg type="void" id="addr2" text="void *addr2" mod=""/>
    <arg type="int" id="num" text="int num" mod=""/>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
    <arg type="int" id="before_p" text="int before_p" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_dbg_free" text="void CRYPTO_dbg_free(void *addr, int before_p)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="addr" text="void *addr" mod=""/>
    <arg type="int" id="before_p" text="int before_p" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_dbg_set_options" text="void CRYPTO_dbg_set_options(long bits)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="long" id="bits" text="long bits" mod=""/>
  </args>
</fdecl>
<fdecl type="long" id="CRYPTO_dbg_get_options" text="long CRYPTO_dbg_get_options(void)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="ANON21" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_mem_leaks_fp" text="void CRYPTO_mem_leaks_fp(FILE *)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="FILE" id="ANON22" text="FILE *" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_mem_leaks" text="void CRYPTO_mem_leaks(struct bio_st *bio)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="struct bio_st" id="bio" text="struct bio_st *bio" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_MEM_LEAK_CB" text="typedef void *CRYPTO_MEM_LEAK_CB (unsigned long, const char *, int, int,&#10;                                  void *)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="unsigned long" id="ANON23" text="unsigned long" mod=""/>
    <arg type="const char" id="ANON24" text="const char *" mod=""/>
    <arg type="int" id="ANON25" text="int" mod=""/>
    <arg type="int" id="ANON26" text="int" mod=""/>
    <arg type="void" id="ANON27" text="void *" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="CRYPTO_mem_leaks_cb" text="void CRYPTO_mem_leaks_cb(CRYPTO_MEM_LEAK_CB *cb)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="CRYPTO_MEM_LEAK_CB" id="cb" text="CRYPTO_MEM_LEAK_CB *cb" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="OpenSSLDie" text="void OpenSSLDie(const char *file, int line, const char *assertion)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="const char" id="file" text="const char *file" mod=""/>
    <arg type="int" id="line" text="int line" mod=""/>
    <arg type="const char" id="assertion" text="const char *assertion" mod=""/>
  </args>
</fdecl>
<fdecl type="unsigned long" id="OPENSSL_ia32cap_loc" text="unsigned long *OPENSSL_ia32cap_loc(void)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="ANON28" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="OPENSSL_isservice" text="int OPENSSL_isservice(void)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="ANON29" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="FIPS_mode" text="int FIPS_mode(void)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="ANON30" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="FIPS_mode_set" text="int FIPS_mode_set(int r)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="int" id="r" text="int r" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="OPENSSL_init" text="void OPENSSL_init(void)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="ANON31" text="void" mod=""/>
  </args>
</fdecl>
<fdecl type="int" id="CRYPTO_memcmp" text="int CRYPTO_memcmp(const volatile void *a, const volatile void *b, size_t len)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="const volatile void" id="a" text="const volatile void *a" mod=""/>
    <arg type="const volatile void" id="b" text="const volatile void *b" mod=""/>
    <arg type="size_t" id="len" text="size_t len" mod=""/>
  </args>
</fdecl>
<fdecl type="void" id="ERR_load_CRYPTO_strings" text="void ERR_load_CRYPTO_strings(void)" file="openssl-1.0.2h/include/openssl/crypto.h">
  <args>
    <arg type="void" id="ANON32" text="void" mod=""/>
  </args>
</fdecl>
</root>
