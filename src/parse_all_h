#!/usr/bin/perl

use v5.10;

use warnings;
use strict;
use threads;
use threads::shared;
use IO::Handle;
use XML::Simple;
use Data::Dumper;

my $MAX_THREADS = 3;
my $OUTPUT_FILE = 'output.xml';
my $CSCAN_PATH = '/usr/bin/perl cscan';

sub getHeaders {
    my ($dir) = @_;

    my @res;
    opendir my $dh, $dir or die "$dir: $!";
    while(readdir $dh){
        if (/\.h$/) {
            push @res, "$dir/$_";
        }
    }
    return @res;
}

my ($targetDir) = @ARGV;
my @hfiles = getHeaders $targetDir;

my @jobs;

open(my $fh, ">$OUTPUT_FILE") or die "$OUTPUT_FILE: $!"; 

say $fh "<root>";

my $j :shared;
my $mutex_write :shared;

$j = 0;
for (my $i = 0; $i < $MAX_THREADS; $i++)
{
    push @jobs, threads->create(sub{
            my $run = 1;
            while($run)
            {
                my $file;

                # Try to get a job
                {
                    lock($j);
                    if ($j > $#hfiles){ $run = 0; }
		    
                    else{
                        $file = $hfiles[$j];
                        $j++;
                        say "--$j -> $file--";
                    }
                }

                # Execute a job
                if ($run) {
                    my $command = "$CSCAN_PATH --lazy --get parsed_fdecls $file 2> /dev/null";
                    my $xml = `$command`;
                    if ($?) {$xml = '';}
                    # Get rid of xml version tag or error message
                    my $ind = index($xml, ">") + 1;
                    $xml = substr($xml, $ind, (length $xml) - $ind);
		    
                    {
                        lock($mutex_write);
                        print $fh $xml;
                        $fh->flush();
                    }
                    say "Parsing $file: done.";
                }
            }
        });
}

$_->join for @jobs;
say $fh "</root>";

close($fh);
